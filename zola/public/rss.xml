<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Learn Rust Together</title>
        <link>https://example.com/blog</link>
        <description>My blog</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://example.com/blog/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Thu, 19 Jan 2023 00:00:00 +0000</lastBuildDate>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/about-us-ukr/</link>
            <guid>https://example.com/blog/posts/about-us-ukr/</guid>
            <description>&lt;h1 id=&quot;crab-ukrayins-ka-gilka-rust-spil-noti-blue-heart-yellow-heart&quot;&gt;ü¶Ä –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≥—ñ–ª–∫–∞ Rust –°–ø—ñ–ª—å–Ω–æ—Ç–∏ üíôüíõ&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang-ulearn_rust_together&#x2F;b60b4f7155d7b00c58e1f8d8820f2bb23f82799e&#x2F;&#x2F;logo&#x2F;Collage_2.jpg&quot; alt=&quot;learn rust together&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;khto-mi&quot;&gt;–•—Ç–æ –º–∏?&lt;&#x2F;h2&gt;
&lt;p&gt;–ü—Ä–∏–≤—ñ—Ç, –º–∏ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≥—ñ–ª–∫–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ Rust –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤.&lt;&#x2F;p&gt;
&lt;p&gt;–ù–∞—à–æ—é –º–µ—Ç–æ—é —î –ø–æ–ø—É–ª—è—Ä–∏–∑–∞—Ü—ñ—è Rust –≤ –£–∫—Ä–∞—ó–Ω—ñ —Ç–∞ —Ä–æ–∑–≤–∏—Ç–æ–∫ –∫–æ–º‚Äô—é–Ω—ñ—Ç—ñ –Ω–∞–≤–∫–æ–ª–æ –Ω—å–æ–≥–æ, –∑–∞–ø—É—Å–∫ –∞–±–æ —Å–ø—Ä–∏—è–Ω–Ω—è —Ä–æ–∑–≤–∏—Ç–∫—É –≤—Å–µ—É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –º–µ–Ω—Ç–æ—Ä—Å—å–∫–∏—Ö —Ç–∞ –æ—Å–≤—ñ—Ç–Ω—ñ—Ö –ø—Ä–æ–≥—Ä–∞–º, –∑–∞–ª—É—á–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤ –Ω–∞ Rust —Ç–∞ –ø–æ–≤‚Äô—è–∑–∞–Ω–∏—Ö –∑ –Ω–∏–º–∏ —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π –≤ –£–∫—Ä–∞—ó–Ω—É.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chomu-rast&quot;&gt;–ß–æ–º—É –†–∞—Å—Ç?&lt;&#x2F;h2&gt;
&lt;p&gt;Rust - –º—É–ª—å—Ç–∏–ø–∞—Ä–∞–¥–∏–≥–º–æ–≤–∞ –º–æ–≤–∞, –≥–æ–ª–æ–≤–Ω–∏–º–∏ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏ —è–∫–æ—ó —î –≤–∏—Å–æ–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ –±–µ–∑–ø–µ–∫–∞. –ú–æ–≤–∞ - —è–∫–∞ —î –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–º —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ –≤–µ–ª–∏–∫–∏—Ö –∫–æ–º–∞–Ω–¥ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º —Ä—ñ–≤–Ω–µ–º –∑–Ω–∞–Ω—å —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è. Rust –±—É–ª–∞ –≤–∏–∑–Ω–∞–Ω–∞ —è–∫ ¬´–Ω–∞–π—É–ª—é–±–ª–µ–Ω—ñ—à–∞ –º–æ–≤–∞ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤¬ª –∑–∞ –≤–µ—Ä—Å—ñ—î—é Stack Overflow –¥–µ–∫—ñ–ª—å–∫–∞ —Ä–æ–∫—ñ–≤ –ø–æ—Å–ø—ñ–ª—å. Rust community —Ç—Ä–∞–¥–∏—Ü—ñ–π–Ω–æ –≤–∏—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è —Å–≤–æ—î—é –¥—Ä—É–∂–Ω—ñ—Å—Ç—é.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chomu-mi-tse-robimo&quot;&gt;–ß–æ–º—É –º–∏ —Ü–µ —Ä–æ–±–∏–º–æ?&lt;&#x2F;h2&gt;
&lt;p&gt;–ú–∏ –ø—Ä–∞–≥–Ω–µ–º–æ –Ω–∞–¥–∞—Ç–∏ —É—Å—ñ–º –æ—Ö–æ—á–∏–º –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –¥–æ–≤—ñ—Ä—á–∏—Ö –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏—Ö —Å—Ç–æ—Å—É–Ω–∫—ñ–≤ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä—É, —Å–ø—Ä—è–º–æ–≤–∞–Ω–∏—Ö –Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Ç–∞ —Ä–æ–∑–≤–∏—Ç–æ–∫ –æ–¥–Ω–µ –æ–¥–Ω–æ–≥–æ.
–ì–æ–ª–æ–≤–Ω–∏–º–∏ –¥–ª—è –Ω–∞—Å —Ü—ñ–Ω–Ω–æ—Å—Ç—è–º–∏ —î:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;–≤–∑–∞—î–º–æ–¥–æ–ø–æ–º–æ–≥–∞&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;–≤—ñ–¥–∫—Ä–∏—Ç—ñ—Å—Ç—å&lt;&#x2F;strong&gt; –¥–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏—Ö —Ç–æ—á–æ–∫ –∑–æ—Ä—É&lt;&#x2F;li&gt;
&lt;li&gt;–∫—É–ª—å—Ç–∏–≤–∞—Ü—ñ—è &lt;strong&gt;Open Source&lt;&#x2F;strong&gt; –∫—É–ª—å—Ç—É—Ä–∏&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;–¥—Ä—É–∂–Ω—î —Å—Ç–∞–≤–ª–µ–Ω–Ω—è&lt;&#x2F;strong&gt; –æ–¥–∏–Ω –¥–æ –æ–¥–Ω–æ–≥–æ&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;iak-uchasnik-nashogo-kom-iuniti-ti-zmozhesh&quot;&gt;–Ø–∫ —É—á–∞—Å–Ω–∏–∫ –Ω–∞—à–æ–≥–æ –∫–æ–º‚Äô—é–Ω—ñ—Ç—ñ —Ç–∏ –∑–º–æ–∂–µ—à:&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;–±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –≤–æ—Ä–∫—à–æ–ø–∞—Ö –ø–æ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø—Ä–æ–µ–∫—Ç—ñ–≤ –Ω–∞ Rust&lt;&#x2F;li&gt;
&lt;li&gt;–¥–∏—Å–∫—É—Ç—É–≤–∞—Ç–∏ —É —á–∞—Ç—ñ –∑ —ñ–Ω—à–∏–º–∏ Rust-–µ–Ω—Ç—É–∑—ñ–∞—Å—Ç–∞–º–∏&lt;&#x2F;li&gt;
&lt;li&gt;–¥—ñ–ª–∏—Ç–∏—Å—å —ñ–¥–µ—è–º–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥–æ–º –Ω–∞ —â–æ—Ç–∏–∂–Ω–µ–≤–∏—Ö –æ–Ω–ª–∞–π–Ω –∑—É—Å—Ç—Ä—ñ—á–∞—Ö  ‚ÄúWeekly Rust‚Äù&lt;&#x2F;li&gt;
&lt;li&gt;–∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤ —Ç–∞ —Å–ø—ñ–ª—å–Ω–æ —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—å&lt;&#x2F;li&gt;
&lt;li&gt;–¥—ñ–∑–Ω–∞–≤–∞—Ç–∏—Å—å –Ω–∞–π–∞–∫—Ç—É–∞–ª—å–Ω—ñ—à—ñ –Ω–æ–≤–∏–Ω–∏ –ø—Ä–æ Rust&lt;&#x2F;li&gt;
&lt;li&gt;–∑ –∫–æ—Ä–∏—Å—Ç—é –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ —á–∞—Å –Ω–∞ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–∞—Ö –¥–ª—è —á–ª–µ–Ω—ñ–≤ –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;question-faq&quot;&gt;:question: FAQ&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ —Ü–µ –∫–æ–º‚Äô—é–Ω—ñ—Ç—ñ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ù—ñ. –ë–∞–≥–∞—Ç–æ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –Ω–∞—à–æ–≥–æ –∫–æ–º‚Äô—é–Ω—ñ—Ç—ñ –º–∞—é—Ç—å —Ä–æ–∫–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –¥–æ—Å–≤—ñ–¥—É, –¥–µ—Ö—Ç–æ –∑ Rust –∑ –ø–æ—á–∞—Ç–∫—ñ–≤.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –©–æ —è–∫—â–æ —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–°–ø—ñ–ª—å–Ω–æ—Ç–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ —ñ –ø–µ—Ä–µ–ø–∏—Å–∫–∞ –≤–µ–¥–µ—Ç—å—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, —Ö–æ—á–∞ –≤–∂–∏–≤–∞–Ω–Ω—è —ñ–Ω—à–∏—Ö –º–æ–≤ –Ω–µ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ. –Ø–∫—â–æ —Ü–µ –ø—Ä–æ–±–ª–µ–º–∞ —Ç–æ –≤–∞–º –º–∞–±—É—Ç—å –ª—ñ–ø—à–µ –ø–æ—à—É–∫–∞—Ç–∏ —Å–ø—ñ–ª—å–Ω–æ—Ç—É –Ω–∞ –≤–∞—à—ñ–π –º–æ–≤—ñ.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ –º–æ–∂—É —è –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å, —è–∫—â–æ —è —Ä–æ–∑—Ä–æ–±–ª—è—é –Ω–∞ —ñ–Ω—à—ñ–π –º–æ–≤—ñ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–¢–∞–∫. –ë—ñ–ª—å—à—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—Ä–æ–±–ª—è—é—Ç—å –Ω–∞ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –º–æ–≤–∞—Ö. –ë–∞–≥–∞—Ç–æ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –ø–∏—à—É—Ç—å –ø—Ä–æ–≥—Ä–∞–º–∏ –Ω–∞ Scala, Haskell, Idris, C# —ñ –Ω–∞–≤—ñ—Ç—å –Ω–∞ Java —Ç–∞ C++.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ —è –º–æ–∂—É —Ç—É—Ç –Ω–∞–π–Ω—è—Ç–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–¢–∞–∫, –ø—Ä–æ—Ç–µ –æ–±–º–µ–∂–∏—Ç–∏—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–æ—Ä–æ—Ç–∫–∏–º –æ–ø–∏—Å–æ–º —ñ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä–µ–Ω–µ—Å—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ó–∞ —â–æ –º–æ–∂–Ω–∞ –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ —É –±–∞–Ω?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ó–∞ –Ω–µ —á–µ–º–Ω–µ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –¥–æ —ñ–Ω—à–∏—Ö —á–ª–µ–Ω—ñ–≤ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏, –∑–∞ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥—É –∞–≥—Ä–µ—Å—ñ—ó –ø—Ä–æ—Ç–∏ –£–∫—Ä–∞—ó–Ω–∏ —á–∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–µ –ø–æ—Ä—É—à–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ —î –≤–∏ —É —ñ–Ω—à–∏—Ö —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–¢–∞–∫, –º–∏ —î —É Twitter, Facebook, Discord, Patreon, Reddit, LinkedIn. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—Å—ñ –Ω–∞—à—ñ —Å–æ—Ü–º–µ—Ä–µ–∂—ñ &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&#x2F;2383&quot;&gt;—Ç—É—Ç&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ —î –∑—É—Å—Ç—Ä—ñ—á—ñ –æ—Ñ–ª–∞–π–Ω?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–¢–∞–∫. –ü—Ä–æ—Ç–µ –ø—ñ–¥ —á–∞—Å –≤—ñ–π–Ω–∏ —Å—Ç–∞–ª–æ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ —Ç–∞–∫—ñ –∑—É—Å—Ç—Ä—ñ—á —Å–∫–ª–∞–¥–Ω—ñ—à–µ.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ß–∏ –º–æ–∂—É —è –∑–Ω–∞–π—Ç–∏ —Ç—É—Ç –º–µ–Ω—Ç–æ—Ä–∞?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–¢–∞–∫. –ù–∞–ø–∏—à—ñ—Ç—å –≤ —á–∞—Ç—ñ, —â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω –º–µ–Ω—Ç–æ—Ä —ñ –∑ —è–∫–æ—é –º–µ—Ç–æ—é —ñ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ —Ö—Ç–æ—Å—å –≤—ñ–¥–≥—É–∫–Ω—É—Ç—å—Å—è.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –Ø–∫—ñ –æ—Å–≤—ñ—Ç–Ω—ñ –∑–∞—Ö–æ–¥–∏ –º–æ–∂–Ω–∞ –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ü–µ—Ä—ñ–æ–¥–∏—á–Ω–æ –º–∏ –ø—Ä–æ–≤–æ–¥–∏–º–æ –º—ñ—Å—Ü–µ–≤—ñ —Ç–∞ –≤—Å–µ—É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –≤–µ–±—ñ–Ω–∞—Ä–∏, –≤–æ—Ä–∫—à–æ–ø–∏ —Ç–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó –ø–æ Rust. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ &lt;a href=&quot;https:&#x2F;&#x2F;calendar.google.com&#x2F;calendar&#x2F;u&#x2F;0?cid=OWpobWZuYTJmdjcyNjFxNjNzaDV1aHZhNWNAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&quot;&gt;–∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º&lt;&#x2F;a&gt; —Ç–∞ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è–º–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ñ.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –Ø–∫ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–≤—é –º–æ–≥–æ –∫–æ–¥—É?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ü—Ä–æ—Å—Ç–æ –≤–∏—Å–ª–æ–≤—ñ—Ç—å –ø—Ä–æ—Ö–∞–Ω–Ω—è –≤ —á–∞—Ç—ñ —ñ —Ö—Ç–æ—Å—å –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤—ñ–¥–≥—É–∫–Ω–µ—Ç—å—Å—è!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –Ø–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ Rust?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–õ—ñ–ø—à–µ —è–∫—â–æ —É –≤–∞—Å —î –∫–æ–¥ –≤ &lt;a href=&quot;https:&#x2F;&#x2F;play.rust-lang.org&#x2F;&quot;&gt;–ø–ª–µ–π–≥—Ä–∞—É–Ω–¥—ñ&lt;&#x2F;a&gt;. –í —Ü—å–æ–º—É —Ä–∞–∑—ñ –Ω–∞–º –Ω–µ –¥–æ–≤–æ–¥–∏—Ç—å—Å—è –≤–∏—Ç—Ä–∞—á–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —á–∞—Å –Ω–∞ —Ç–µ —â–æ–± –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –ó —á–æ–≥–æ –ª—ñ–ø—à–µ –ø–æ—á–∞—Ç–∏ –≤–∏–≤—á–µ–Ω–Ω—è?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ –¥–æ–±—ñ—Ä–∫—É –∫—É—Ä—Å—ñ–≤ —Ç–∞ &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&quot;&gt;–º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è –æ—Å–≤–æ—î–Ω–Ω—è Rust&lt;&#x2F;a&gt;, –∫–æ—Ç—Ä—É –º–∏ –≤–∏–±–∏—Ä–∞–ª–∏ –≤—Ä—É—á–Ω—É. –ü–æ—á–Ω—ñ—Ç—å –∑ —Ä–æ–∑–¥—ñ–ª—É ‚ÄúGeneral-purpose courses‚Äù. –û—Å–æ–±–ª–∏–≤—É —É–≤–∞–≥—É –ø—Ä–∏–¥—ñ–ª–∏—Ç–∏ —Ç–∏–º –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º, –∫–æ—Ç—Ä—ñ –ø–æ–∑–Ω–∞—á–µ–Ω—ñ –∑—ñ—Ä–æ—á–∫–æ—é.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –î–æ –∫–æ–≥–æ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è —Å—Ç–æ—Å–æ–≤–Ω–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–Ø–∫—â–æ –º–∞—î—Ç–µ –±–∞–∂–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥—Ç–∏ —ñ–∑ –º–æ–¥–µ—Ä–∞—Ü—ñ—î—é, –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤—ñ–π –∑–∞—Ö—ñ–¥, –¥–∞—Ç–∏ —Ñ—ñ–¥–±–µ–∫ —á–∏ –≤–Ω–µ—Å—Ç–∏ –±—É–¥—å-—è–∫–∏–π —ñ–Ω—à–∏–π –≤–Ω–µ—Å–æ–∫ —É –ø–æ–ø—É–ª—è—Ä–∏–∑–∞—Ü—ñ—é Rust –≤ –£–∫—Ä–∞—ó–Ω—ñ, —Ç–æ –ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, &lt;a href=&quot;https:&#x2F;&#x2F;t.mwandalen_me&quot;&gt;kos&lt;&#x2F;a&gt; —É –¢–µ–ª–µ–≥—Ä–∞–º.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- –©–æ —è–∫—â–æ —è –Ω–µ –∑–Ω–∞—Ö–æ–¥–∂—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ —Ü—å–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
–ó–∞–ø–∏—Ç–∞–π—Ç–µ —É –Ω–∞—Å –≤ &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;—á–∞—Ç—ñ&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;doluchitisia&quot;&gt;–î–æ–ª—É—á–∏—Ç–∏—Å—è&lt;&#x2F;h2&gt;
&lt;p&gt;–ß–µ–∫–∞—î–º–æ —Ç–µ–±–µ —É –Ω–∞—à–æ–º—É –¥—Ä—É–∂–Ω—å–æ–º—É –∫–æ–º‚Äô—é–Ω—ñ—Ç—ñ ‚Äú–í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º‚Äù.&lt;&#x2F;p&gt;
&lt;p&gt;üí¨ –î–æ–ª—É—á–∞–π—Å—è –¥–æ &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;–¢–µ–ª–µ–≥—Ä–∞–º-–ß–∞—Ç—É&lt;&#x2F;a&gt; —Ç–∞ &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;rustlang_ua&quot;&gt;–¢–µ–ª–µ–≥—Ä–∞–º-–ö–∞–Ω–∞–ª—É&lt;&#x2F;a&gt;.
üìñ –†–µ—Å—É—Ä—Å–∏ —è–∫—ñ –º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&quot;&gt;—Ç—É—Ç&lt;&#x2F;a&gt;. &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;–¢–∞–∫–æ–∂ —à—É–∫–∞–π –Ω–∞—Å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LearnTogetherP&quot;&gt;Twitter&lt;&#x2F;a&gt;  |
&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;learntogetherpro&quot;&gt;Facebook&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;company&#x2F;learn-together-pro&quot;&gt;Linkedin&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&quot;&gt;GitHub&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invitJVCZfTVf5A&quot;&gt;Discord&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rustlang_u&quot;&gt;Reddit&lt;&#x2F;a&gt; |
&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;–í–∏–≤—á–∞—î–º–æ Rust ü¶Ä –†–∞–∑–æ–º!&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/about-us/</link>
            <guid>https://example.com/blog/posts/about-us/</guid>
            <description>&lt;h1 id=&quot;crab-ukrainian-branch-of-rust-community-blue-heart-yellow-heart&quot;&gt;ü¶Ä Ukrainian branch of Rust Community üíôüíõ&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang-ulearn_rust_together&#x2F;b60b4f7155d7b00c58e1f8d8820f2bb23f82799e&#x2F;&#x2F;logo&#x2F;Collage_2.jpg&quot; alt=&quot;learn rust together&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;who-are-we&quot;&gt;Who are we?&lt;&#x2F;h2&gt;
&lt;p&gt;We are a Ukrainian branch of the community of Rust enthusiasts.&lt;&#x2F;p&gt;
&lt;p&gt;Our goals are to popularize Rust in Ukraine, develop the community around it, launch and support such Ukrainian mentoring and educational programs, and attract Rust projects and related investments in Ukraine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-rust&quot;&gt;Why Rust?&lt;&#x2F;h2&gt;
&lt;p&gt;Rust is a multi-paradigm programming language designed for performance and safety. It is an effective tool for the collaboration of large developer teams with different levels of knowledge. Furthermore, according to the Stack Overflow Developer Survey, Rust is the most beloved programming language several times in a row. The Rust community is traditionally very friendly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-are-our-aims&quot;&gt;What are our aims?&lt;&#x2F;h2&gt;
&lt;p&gt;We strive to provide all members with the space to build trusting professional relationships in an informal way by providing support and encouragement to develop professional skills.
These are the core values of our organization:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mutual assistance&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;openness&lt;&#x2F;strong&gt; to listen to alternative points of view&lt;&#x2F;li&gt;
&lt;li&gt;cultivation of &lt;strong&gt;Open Source&lt;&#x2F;strong&gt; culture&lt;&#x2F;li&gt;
&lt;li&gt;fostering a &lt;strong&gt;friendly attitude&lt;&#x2F;strong&gt; towards each other&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-can-we-gain-from-joining-your-community&quot;&gt;What can we gain from joining your community?&lt;&#x2F;h2&gt;
&lt;p&gt;As a member of  our community, you can:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;participate in workshops on Rust projects&lt;&#x2F;li&gt;
&lt;li&gt;engage in a friendly debate with other Rust enthusiasts in our chat&lt;&#x2F;li&gt;
&lt;li&gt;share ideas and experiences during our weekly Rust online meetings&lt;&#x2F;li&gt;
&lt;li&gt;find like-minded people and develop common interests together&lt;&#x2F;li&gt;
&lt;li&gt;get the latest news about Rust&lt;&#x2F;li&gt;
&lt;li&gt;have a good time in informal meetings for our members&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;question-faq&quot;&gt;:question: FAQ&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Is the community for beginners only?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
No. Many of our members have many years of professional experience, and some have been studying Rust since its inception.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- What if I don‚Äôt understand Ukrainian?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
The community is Ukrainian and the communication used is mainly in Ukrainian. Although other languages are not forbidden, you should probably seek a community in your language to avoid problems in communicating.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Can I join your community if I develop in another programming language?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Yes, you can. Most participants develop in several languages. Many members write programs in Scala, Haskell, Idris, C#, and even Java and C++.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- May I look for employees here?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Yes, but please keep your description concise and move the conversation to private after finding a candidate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- What actions can get members  banned?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Members can get banned for disrespecting other members of the community, for promoting aggressive propaganda against Ukraine, and for a systematic violation of rules.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Do you have other social media accounts?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Yes, you can also find us on Twitter, Facebook, Discord, Patreon, Reddit, and LinkedIn. Links to our other social media networks are &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&#x2F;2383&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Do you conduct face-to-face meetings?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Yes, we do. However, it became more difficult to hold such meetings during the war.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Can I find a mentor here?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Yes. Simply write in the chat that you need a mentor and for what purpose. Surely, someone will respond.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- What educational activities can I attend?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
We periodically hold local and national webinars, workshops, and conferences about Rust. Follow  &lt;a href=&quot;https:&#x2F;&#x2F;calendar.google.com&#x2F;calendar&#x2F;u&#x2F;0?cid=OWpobWZuYTJmdjcyNjFxNjNzaDV1aHZhNWNAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&quot;&gt;the calendar&lt;&#x2F;a&gt; and announcements on the channel so you will be notified of upcoming events.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- How can I get my code review?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Just ask in the chat and someone will respond.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- What is the best way to ask questions about Rust?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
It is better if you have the code in the &lt;a href=&quot;https:&#x2F;&#x2F;play.rust-lang.org&#x2F;&quot;&gt;playground&lt;&#x2F;a&gt;. In this case, we don‚Äôt spend extra time recreating the problem.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Where do I start learning?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Please pay attention to manually-selected courses and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&quot;&gt;learning materials on Rust&lt;&#x2F;a&gt;. You may start from ‚ÄúGeneral-purpose courses‚Äù section. Starred resources are highly recommended.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- Who do I contact for collaboration and feedback?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Please contact &lt;a href=&quot;https:&#x2F;&#x2F;t.mwandalen_me&quot;&gt;me&lt;&#x2F;a&gt; on Telegram if you wish to: help with moderation, host an event, provide comments, or make any other contributions to the promotion of Rust in Ukraine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;ins&gt;&lt;em&gt;- What if I didn‚Äôt find an answer in the FAQ?&lt;&#x2F;em&gt;&lt;&#x2F;ins&gt;&lt;br&#x2F;&gt;
Ask us on &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;chat&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;join&quot;&gt;Join&lt;&#x2F;h2&gt;
&lt;p&gt;Come join our friendly community!&lt;&#x2F;p&gt;
&lt;p&gt;üí¨ Join our &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Telegram-Chat&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;learn_rust_ukr&quot;&gt;Telegram-Channel&lt;&#x2F;a&gt;. &lt;br&#x2F;&gt;
üìñ Resources we recommend are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&quot;&gt;here&lt;&#x2F;a&gt;. &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You may also follow us on these platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LearnTogetherP&quot;&gt;Twitter&lt;&#x2F;a&gt;  |
&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;learntogetherpro&quot;&gt;Facebook&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;company&#x2F;learn-together-pro&quot;&gt;Linkedin&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&quot;&gt;GitHub&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invitJVCZfTVf5A&quot;&gt;Discord&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rustlang_u&quot;&gt;Reddit&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Telegram&lt;&#x2F;a&gt; |
&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs Learn Rust ü¶Ä Together!&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/cheat-sheets/</link>
            <guid>https://example.com/blog/posts/cheat-sheets/</guid>
            <description>&lt;h1 id=&quot;chart-with-upwards-trend-cheat-sheats&quot;&gt;:chart_with_upwards_trend: Cheat sheats&lt;&#x2F;h1&gt;
&lt;p&gt;Collection of cheat sheets.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cheat-sheets&quot;&gt;Cheat sheets&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cheats.r&quot;&gt;Rust Language Cheat Sheet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;xr.io&#x2F;&quot;&gt;Ralf Biedert&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;Cheatsheets.md#memory-layout&quot;&gt;Memoty Layout&lt;&#x2F;a&gt; by Raph Levien&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;donbrighrust-lang-cheat-sheet&quot;&gt;Cheat Sheet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;donbright&quot;&gt;don bright&lt;&#x2F;a&gt; : basics&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;memory-layout&quot;&gt;Memory Layout&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;cheatsheet&#x2F;Layout.jpg&quot; alt=&quot;Memoty Layout&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/collection-of-collections/</link>
            <guid>https://example.com/blog/posts/collection-of-collections/</guid>
            <description>&lt;h1 id=&quot;collection-of-collections&quot;&gt;Collection of collections&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;collection-of-collections&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;label-projects-catalogue&quot;&gt;:label: Projects catalogue&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;collection&lt;&#x2F;em&gt; ) ( &lt;em&gt;project&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.r&quot;&gt;Are we game yet?&lt;&#x2F;a&gt; : gamedev&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.arewewebyet.org&#x2F;&quot;&gt;Are we web yet?&lt;&#x2F;a&gt; : web&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.areweguiyet.com&#x2F;&quot;&gt;Are we GUI yet?&lt;&#x2F;a&gt; : user interfaces&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.arewelearningyet.com&#x2F;&quot;&gt;Are we learning yet?&lt;&#x2F;a&gt; : machine learning&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.r&quot;&gt;Lib.rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-unofficial&#x2F;awesome-rust&quot;&gt;A curated list of Rust code and resources&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;edunham&quot;&gt;E. Dunham&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;newspaper-newspapers-and-working-groups&quot;&gt;:newspaper: Newspapers and working groups&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;collection&lt;&#x2F;em&gt; ) ( &lt;em&gt;newspaper&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readrust.ne&quot;&gt;Read Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;this-week-in-rust.org&#x2F;&quot;&gt;This Week in Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.r&quot;&gt;Rust GameDev Working Group&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustwasm.github.io&#x2F;&quot;&gt;Rust and WebAssembly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;&quot;&gt;The Rustacean Station Podcast&lt;&#x2F;a&gt; ( &lt;em&gt;audio&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;globe-with-meridians-other-collections-on-rust&quot;&gt;:globe_with_meridians: Other collections on Rust&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;collection&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:blue_book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sger&#x2F;RustBooks&quot;&gt;Read&lt;&#x2F;a&gt; : books on Rust&lt;&#x2F;li&gt;
&lt;li&gt;:footprints:Ô∏è &lt;a href=&quot;introduction.md&quot;&gt;Start&lt;&#x2F;a&gt; : setup and step-by-step introduction into development on Rust.&lt;&#x2F;li&gt;
&lt;li&gt;:mortar_board: &lt;a href=&quot;learn.md&quot;&gt;Learn&lt;&#x2F;a&gt; : collection of materials to learn Rust.&lt;&#x2F;li&gt;
&lt;li&gt;:chart_with_upwards_trend: &lt;a href=&quot;cheat_sheets.md&quot;&gt;Systemize&lt;&#x2F;a&gt; : collection of cheat sheets.&lt;&#x2F;li&gt;
&lt;li&gt;:speech_balloon: &lt;a href=&quot;communicate.md&quot;&gt;Communicate&lt;&#x2F;a&gt; : collection of chats and forums&lt;&#x2F;li&gt;
&lt;li&gt;:question: &lt;a href=&quot;about_us.md#question-faq&quot;&gt;Get answer&lt;&#x2F;a&gt; : our FAQ and community rules.&lt;&#x2F;li&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;ToolboxMath.md&quot;&gt;Math toolbox&lt;&#x2F;a&gt; with collection of crates for Math, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;ToolboxDistros.md&quot;&gt;Distros toolbox&lt;&#x2F;a&gt; with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ctjhorust-learning&quot;&gt;List of resources to learn Rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ctjhoa&quot;&gt;Camille TJHOA&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hackr.io&#x2F;tutoriallearn-rust&quot;&gt;List of resources to learn Rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;hackr.io&#x2F;&quot;&gt;hackr.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;rust-anthology&#x2F;blob&#x2F;master&#x2F;master-list.md&quot;&gt;Rust Anthology&lt;&#x2F;a&gt; by [Brian Anderson](https:&#x2F;&#x2F;github.com&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kixiron&#x2F;rust-langdev&quot;&gt;rust-langdev&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kixiron&quot;&gt;Chase Wilson&lt;&#x2F;a&gt; : language development toolbox&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;awesome-embedded-rust&quot;&gt;Awesome Embed Rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&quot;&gt;Rust Embedded&lt;&#x2F;a&gt; ( &lt;em&gt;about:embed&lt;&#x2F;em&gt; ) ( &lt;em&gt;collection&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;awesome-rust-and-webassembly&quot;&gt;Awesome Rust and Webassembly&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&quot;&gt;rustwasm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;forge.rust-lang.org&#x2F;index.html&quot;&gt;Rust Forge&lt;&#x2F;a&gt; : documentation useful for members&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;:star: - fearured and strongly recommended&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;collection&lt;&#x2F;em&gt; ) - collection of resources instead of single resource&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;about:embed&lt;&#x2F;em&gt; ) - proper error handling&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/communicate/</link>
            <guid>https://example.com/blog/posts/communicate/</guid>
            <description>&lt;h1 id=&quot;speech-balloon-rust-community&quot;&gt;:speech_balloon: Rust Community&lt;&#x2F;h1&gt;
&lt;p&gt;Curated list of chats, news streams and forums about Rust. You may get help with Rust on those resources.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;communicate&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;speaking-head-chats&quot;&gt;:speaking_head: Chats&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;chat&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º &lt;&#x2F;a&gt;( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; ) &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mlearn_rust_together_kyiv&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º # Kyiv &lt;&#x2F;a&gt;   ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mlearn_rust_together_odesa&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º # Odesa &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )  ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; ) &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mlearn_rust_together_lviv&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º # Lviv &lt;&#x2F;a&gt;  ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )  ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invitJVCZfTVf5A&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º &lt;&#x2F;a&gt; ( &lt;em&gt;discord&lt;&#x2F;em&gt; )   ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rustlang_ucomments&#x2F;vbxc7s&#x2F;ukrainian_branch_of_rust_community&#x2F;&quot;&gt; –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º  &lt;&#x2F;a&gt; ( &lt;em&gt;reddit&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )  ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mrust_beginners_ru&quot;&gt; Rust Beginners &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ru&quot;&gt; Rust ‚Äî —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustdevs&quot;&gt; Learn Rust with RustDevz &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mrust_gamedev_ru&quot;&gt; Rust GameDev ‚Äî —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.membedded_lab&quot;&gt; Embedded Lab &lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;AQ434ubNSa&quot;&gt; Dimforge &lt;&#x2F;a&gt; ( &lt;em&gt;discord&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt; Game development in Rust &lt;&#x2F;a&gt; ( &lt;em&gt;discord&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;rust-lang-community&quot;&gt; Rust community &lt;&#x2F;a&gt; ( &lt;em&gt;discord&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;aGfw68vhtB&quot;&gt; Rustacean Station &lt;&#x2F;a&gt; ( &lt;em&gt;discord&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;blockchain&quot;&gt;Blockchain&lt;&#x2F;h3&gt;
&lt;p&gt;( &lt;em&gt;blockchain&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.msolanaUkr&quot;&gt;SolanaUkr&lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; ) &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mnearprotocolua&quot;&gt;Near Protocol UA - –í–∏–≤—á–∞—î–º–æ Near —Ä–∞–∑–æ–º&lt;&#x2F;a&gt; ( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; ) &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;vibration-mode-news-streams&quot;&gt;:vibration_mode: News streams&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;telegram-channels&quot;&gt;Telegram channels&lt;&#x2F;h3&gt;
&lt;p&gt;( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) ( &lt;em&gt;stream&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mlearn_rust_ukr&quot;&gt; –ö–∞–Ω–∞–ª –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º &lt;&#x2F;a&gt; ( &lt;em&gt;non-eng&lt;&#x2F;em&gt; )  ( &lt;em&gt;ukraine&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mlearn_rust&quot;&gt; English channel Learn Rust Together &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.mthis_week_in_rust&quot;&gt; pub ThisWeekInRust {} &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;twitter-blogs&quot;&gt;Twitter blogs&lt;&#x2F;h3&gt;
&lt;p&gt;( &lt;em&gt;twitter&lt;&#x2F;em&gt; ) ( &lt;em&gt;blog&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ThisWeekInRust&quot;&gt; This Week in Rust &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rustlang&quot;&gt; Rust Language &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustTrending&quot;&gt; Rust Trenging &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_analyzer&quot;&gt;Rust-analyzer &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt; Rust GameDev &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;website-blogs&quot;&gt;Website blogs&lt;&#x2F;h3&gt;
&lt;p&gt;( &lt;em&gt;website&lt;&#x2F;em&gt; ) ( &lt;em&gt;blog&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;&quot;&gt; Rust Main Blog &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;inside-rusindex.html&quot;&gt; Inside Rust Blog &lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.r&quot;&gt; Rust GameDev WG &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;globe-with-meridians-forums&quot;&gt;:globe_with_meridians: Forums&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;forum&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&quot;&gt; Official Rust Forum &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;( &lt;em&gt;forum&lt;&#x2F;em&gt; ) -- forum to comminicate with people&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;chat&lt;&#x2F;em&gt; ) -- chat or forum to comminicate with people&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;stream&lt;&#x2F;em&gt; ) -- stream of either news or announcements&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;blog&lt;&#x2F;em&gt; ) -- blog&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;website&lt;&#x2F;em&gt; ) -- on website&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;telegram&lt;&#x2F;em&gt; ) -- on telegram&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;twitter&lt;&#x2F;em&gt; ) -- on twitter&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;reddit&lt;&#x2F;em&gt; ) -- on reddit&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;linkedin&lt;&#x2F;em&gt; ) -- on linkedin&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;discord&lt;&#x2F;em&gt; ) -- on discord&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;blockchain&lt;&#x2F;em&gt; ) -- about blockchain&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;non-eng&lt;&#x2F;em&gt; ) -- non-english language&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/introduction/</link>
            <guid>https://example.com/blog/posts/introduction/</guid>
            <description>&lt;h1 id=&quot;footprints-introduction&quot;&gt;:footprints:Ô∏è Introduction&lt;&#x2F;h1&gt;
&lt;p&gt;It is a setup and meta step-by-step instruction to start development in Rust.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;crab-what-is-it&quot;&gt;:crab: What is it?&lt;&#x2F;h2&gt;
&lt;!-- [![](https:&#x2F;&#x2F;github.com&#x2F;ChapliaLearnRustTogether&#x2F;blob&#x2F;master&#x2F;&#x2F;img&#x2F;logo&#x2F;rust-social-wide.jpg)](introduction.md) --&gt;
&lt;p&gt;Rust is a multi-paradigm programming language designed for performance and safety. It is an effective tool for the collaboration of large developer teams with different levels of knowledge. Furthermore, according to the Stack Overflow Developer Survey, Rust has been the most beloved programming language for seven years in a row. The Rust community is traditionally very friendly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;book-resources-to-use&quot;&gt;:book: Resources to use:&lt;&#x2F;h2&gt;
&lt;p&gt;There are some of the most popular general-purpose official resources for learning Rust: &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch00-00-introduction.html&quot;&gt;The Rust Book&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch00-00-introduction.html&quot;&gt;:uk:&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.ru&#x2F;book&#x2F;&quot;&gt;:pirate_flag:&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It might be more convenient for you to start from a video course instead of a book. For example, you might like &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLJbE2Yu2zumDF6BX6_RdPisRVHgzV02NW&quot;&gt;Intro to Rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;:zap: Other interesting sources you can find in our &lt;a href=&quot;learn.md#mortar_board-our-awesome-collection-of-materials-to-learn-rust&quot;&gt; Awesome Collection of Materials&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gear-how-to-set-up-rust&quot;&gt;&lt;a href=&quot;rust_setup.md&quot;&gt;:gear: How to set up rust&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;question-where-to-get-help&quot;&gt;:question: Where to get help?:&lt;&#x2F;h2&gt;
&lt;p&gt;If you are Ukrainian, the best way to get help is to join our &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Learn Rust Together&lt;&#x2F;a&gt; community, where you&#x27;ll definitely be heard and helped by more experienced members.&lt;&#x2F;p&gt;
&lt;p&gt;:zap:	There is also our &lt;a href=&quot;communicate.md&quot;&gt;Communicate&lt;&#x2F;a&gt; page, where you can find a lot of different Rust global or local chats and news streams.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pushpin-how-to-ask-questions&quot;&gt;:pushpin: How to ask questions?:&lt;&#x2F;h2&gt;
&lt;p&gt;The best way to ask questions is to share your code in the &lt;a href=&quot;https:&#x2F;&#x2F;play.rust-lang.org&#x2F;&quot;&gt;playground&lt;&#x2F;a&gt;. In this case, other members don&#x27;t have to spend extra time recreating the problem.&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;books-alternative-ways-to-learn-rust&quot;&gt;:books: Alternative ways to learn Rust&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;1) Practice, interactive feedback&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustlings#rustlings-%EF%B8%8F&quot;&gt;Rustling&lt;&#x2F;a&gt; is a project with small exercises to get you used to reading and writing Rust code. In general, you have to solve compiler messages about mistakes by modifying the given code. It&#x27;d really help you to get an understanding of how the compiler works and what are the most common code issues. If you struggle to start, just follow &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=G3Vr-yswlaU&quot;&gt;these steps&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;trackrust&#x2F;concepts&quot;&gt;Exercism&lt;&#x2F;a&gt; - an open-source, free-coding platform that offers you not only code practice but mentorship. Here you can find 103 coding exercises that will improve your understanding of Rust concepts. Recommended taking after Rustling.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;&#x2F;img&#x2F;introduction_page&#x2F;exercism.png&quot;  width=&quot;600&quot; align=&quot;center&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-utraining&#x2F;paths&#x2F;rust-first-steps&#x2F;&quot;&gt;Take your first steps with Rust&lt;&#x2F;a&gt; - Interactive course. Lay the foundation of knowledge you need to build fast and effective programs in Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;2) Reading books&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you are a beginner in your Rust learning journey, we&#x27;d highly recommend you to start with &lt;a href=&quot;learn.md#star-general-purpose-courses&quot;&gt;general-purpose books.&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
Then you can also go to the official &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;&quot;&gt;Rust Book&lt;&#x2F;a&gt;, where you can find all the necessary information about Rust, or buy the &lt;a href=&quot;https:&#x2F;&#x2F;www.oreilly.com&#x2F;library&#x2F;view&#x2F;programming-rust-2nd&#x2F;9781492052586&#x2F;&quot;&gt;Programming Rust&lt;&#x2F;a&gt;, which both are ones of the most common books. Also if you target web back-end you should read &lt;a href=&quot;https:&#x2F;&#x2F;www.zero2prod.com&#x2F;index.html?country=Ukraine&amp;amp;discount_code=EEU60&quot;&gt;Zero To Production&lt;&#x2F;a&gt;, also available as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&#x2F;blob&#x2F;master&#x2F;learn&#x2F;backend_book.md&quot;&gt;as a series of articles&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;:zap:	Other interesting books you can find in our &lt;a href=&quot;learn.md#mortar_board-our-awesome-collection-of-materials-to-learn-rust&quot;&gt;Awesome Collection of Materials&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;3) Watching videos&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you are a newcomer and just want to get to know what Rust is - watch &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5C_HPTJg5ek&quot;&gt;Rust in 100 seconds&lt;&#x2F;a&gt;. To dive into the basics of Rust - take a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=zF34dRivLOw&quot;&gt;Crash Course&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
To learn the syntax of Rust deeply and get familiar with Rust code, we&#x27;d also recommend you such courses as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLJbE2Yu2zumDF6BX6_RdPisRVHgzV02NW&quot;&gt;Intro to Rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;TensorProgramming&quot;&gt;Tensor Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLLqEtX6ql2EyPAZ1M2_C0GgVd4A-_L4_5&quot;&gt;Rust Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCmBgC0JN41HjyjAXfkdkp-Q&quot;&gt;Doug Milford&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLai5B987bZ9CoVR-QEIN9foz4QCJ0H2Y8&quot;&gt;The Rust Lang Book&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;LetsGetRusty&quot;&gt;Let&#x27;s Get Rusty&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;:zap: More video courses you cand find on our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&#x2F;blob&#x2F;master&#x2F;learn.md#star-general-purpose-courses&quot;&gt;awesome collection to learn Rust&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;4) Using Cheatsheets&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One more way to learn Rust, but thought the schemes, tables, and images - the &lt;a href=&quot;https:&#x2F;&#x2F;cheats.r&quot;&gt;Rust Cheat Sheet&lt;&#x2F;a&gt;. All tips gathered in one big page will always be useful while writing code. Go to our &lt;a href=&quot;.&#x2F;cheat_sheets.md#chart_with_upwards_trend-cheat-sheats&quot;&gt;collection of cheatsheets&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;&#x2F;img&#x2F;introduction_page&#x2F;cheatsheet.png&quot;  width=&quot;600&quot; align=&quot;center&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/readme-ua/</link>
            <guid>https://example.com/blog/posts/readme-ua/</guid>
            <description>&lt;!-- ![Rust](&#x2F;img&#x2F;logo&#x2F;Logo2.jpg) --&gt;
&lt;h1 id=&quot;crab-vivchaiemo-rust-razom-blue-heart-yellow-heart&quot;&gt;ü¶Ä –í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º üíôüíõ&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&#x2F;learn_rust_together&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang-ulearn_rust_together&#x2F;59713d4ae68edc4aa1447a1194f772adb4cecde0&#x2F;&#x2F;logo&#x2F;Collage_2.jpg&quot; alt=&quot;–í–∏–≤—á–∞—î–º–æ Rust –†–∞–∑–æ–º&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;khto-mi&quot;&gt;–•—Ç–æ –º–∏?&lt;&#x2F;h2&gt;
&lt;p&gt;–ú–∏ - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≥—ñ–ª–∫–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ Rust –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤. –ß–∏—Ç–∞–π—Ç–µ –±—ñ–ª—å—à–µ &lt;a href=&quot;about_us.md&quot;&gt;–ø—Ä–æ –Ω–∞—Å&lt;&#x2F;a&gt; —Ç–∞ –Ω–∞—à—ñ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shcho-tse&quot;&gt;–©–æ —Ü–µ?&lt;&#x2F;h2&gt;
&lt;p&gt;–¶–µ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –º—ñ—Å—Ç–∏—Ç—å –±–ª–∏–∑—å–∫–æ –¥–µ—Å—è—Ç–∫–∞ –ø—ñ–¥—ñ–±—Ä–∞–Ω–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π: –Ω–∞–≤—á–∞–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, –Ω–∞–±–æ—Ä–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤, –Ω–æ–≤–∏–Ω–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞, —Ä–æ–±–æ—á—ñ –≥—Ä—É–ø–∏, –∫–æ–ª–µ–∫—Ü—ñ—ó —ñ–Ω—à–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π. –¢–æ–±—Ç–æ –≤—Å–µ, —â–æ –±—É–¥–µ —Ç–æ–±—ñ –∫–æ—Ä–∏—Å–Ω–µ, —è–∫—â–æ —Ç–∏ Rust —Ä–æ–∑—Ä–æ–±–Ω–∏–∫.&lt;&#x2F;p&gt;
&lt;p&gt;–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –∑–Ω–∞–π—Ç–∏:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:footprints:Ô∏è &lt;a href=&quot;introduction.md&quot;&gt;–†–æ–∑–ø–æ—á–Ω–∏&lt;&#x2F;a&gt; : –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –ø–æ–∫—Ä–æ–∫–æ–≤–∏–π –≤—Å—Ç—É–ø —É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –Ω–∞ Rust&lt;&#x2F;li&gt;
&lt;li&gt;:mortar_board: &lt;a href=&quot;learn.md&quot;&gt;–í–∏–≤—á–∞–π&lt;&#x2F;a&gt; : –∫–æ–ª–µ–∫—Ü—ñ—è –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è Rust&lt;&#x2F;li&gt;
&lt;li&gt;:chart_with_upwards_trend: &lt;a href=&quot;cheat_sheets.md&quot;&gt;–°–∏—Å—Ç–µ–º–∞—Ç–∏–∑—É–π&lt;&#x2F;a&gt; : –∫–æ–ª–µ–∫—Ü—ñ—è —à–ø–∞—Ä–≥–∞–ª–æ–∫&lt;&#x2F;li&gt;
&lt;li&gt;:speech_balloon: &lt;a href=&quot;communicate.md&quot;&gt;–ö–æ–º—É–Ω—ñ–∫—É–π&lt;&#x2F;a&gt; : –∫–æ–ª–µ–∫—Ü—ñ—è —á–∞—Ç—ñ–≤ —Ç–∞ —Ñ–æ—Ä—É–º—ñ–≤&lt;&#x2F;li&gt;
&lt;li&gt;:question: &lt;a href=&quot;about_us.md#question-faq&quot;&gt;–ó–∞–ø–∏—Ç—É–π&lt;&#x2F;a&gt; : –Ω–∞—à—ñ FAQ —Ç–∞ –ø—Ä–∞–≤–∏–ª–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏&lt;&#x2F;li&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;–î–æ—Å–ª—ñ–¥–∂—É–π&lt;&#x2F;a&gt; : –∑–∞–≥–∞–ª—å–Ω–∏–π –Ω–∞–±—ñ—Ä —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –∫—Ä–µ–π—Ç—ñ–≤&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;–î–æ—Å–ª—ñ–¥–∂—É–π&lt;&#x2F;a&gt; : –º—É–ª—å—Ç–∏–º–µ–¥—ñ–π–Ω–∏–π –Ω–∞–±—ñ—Ä —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –∫—Ä–µ–π—Ç—ñ–≤ –¥–ª—è –ì–µ–π–º–î–µ–≤—É, –ì—Ä–∞—Ñ—ñ–∫–∏,–í—ñ–¥–µ–æ —Ç–∞ –ê—É–¥—ñ–æ&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;–î–æ—Å–ª—ñ–¥–∂—É–π&lt;&#x2F;a&gt; : —ñ–Ω–∂–µ–Ω–µ—Ä–Ω–∏–π –Ω–∞–±—ñ—Ä —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –∫—Ä–µ–π—Ç—ñ–≤ –¥–ª—è –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∏, –§—ñ–∑–∏–∫–∏, –õ—ñ–Ω—ñ–π–Ω–æ—ó –ê–ª–≥–µ–±—Ä–∏, –ú–∞—à–∏–Ω–Ω–æ–≥–æ –ù–∞–≤—á–∞–Ω–Ω—è, –¶–∏—Ñ—Ä–æ–≤–æ—ó –û–±—Ä–æ–±–∫–∏ –°–∏–≥–Ω–∞–ª—ñ–≤&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;–î–æ—Å–ª—ñ–¥–∂—É–π&lt;&#x2F;a&gt; : –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–Ω–∏–π –Ω–∞–±—ñ—Ä —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é —É—Ç–∏–ª—ñ—Ç, –Ω–∞–ø–∏—Å–∞–Ω–∏—Ö –Ω–∞ Rust –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–æ–∑–∞ –µ–∫–æ—Å–∏—Å—Ç–µ–º–æ—é Rust&lt;&#x2F;li&gt;
&lt;li&gt;:label: &lt;a href=&quot;collection_of_collections.md#label-projects-catalogue&quot;&gt;–®—É–∫–∞–π&lt;&#x2F;a&gt; : –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ—î–∫—Ç—ñ–≤&lt;&#x2F;li&gt;
&lt;li&gt;:newspaper: &lt;a href=&quot;collection_of_collections.md#newspaper-newspapers-and-working-groups&quot;&gt;–ë—É–¥—å –≤ –∫—É—Ä—Å—ñ&lt;&#x2F;a&gt; : –Ω–æ–≤–∏–Ω–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ —Ç–∞ —Ä–æ–±–æ—á—ñ –≥—Ä—É–ø–∏&lt;&#x2F;li&gt;
&lt;li&gt;:globe_with_meridians: &lt;a href=&quot;collection_of_collections.md#globe_with_meridians-other-collections-on-rust&quot;&gt;–í—Å–µ —â–µ –Ω–µ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ&lt;&#x2F;a&gt; : —ñ–Ω—à—ñ Rust –∫–æ–ª–µ–∫—Ü—ñ—ó&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;doluchaisia&quot;&gt;–î–æ–ª—É—á–∞–π—Å—è&lt;&#x2F;h2&gt;
&lt;p&gt;üí¨ –ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ –Ω–∞—à–æ–≥–æ &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;–¢–µ–ª–µ–≥—Ä–∞–º-–ß–∞—Ç—É&lt;&#x2F;a&gt; —ñ &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;learn_rust_ukr&quot;&gt;–¢–µ–ª–µ–≥—Ä–∞–º-–ö–∞–Ω–∞–ª—É&lt;&#x2F;a&gt;. &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;–¢–∏ –º–æ–∂–µ—à —Ç–∞–∫–æ–∂ —Å–ª—ñ–¥–∫—É–≤–∞—Ç–∏ –∑–∞ –Ω–∞–º–∏ –Ω–∞ —Ü–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LearnTogetherP&quot;&gt;Twitter&lt;&#x2F;a&gt;  |
&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;learntogetherpro&quot;&gt;Facebook&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;company&#x2F;learn-together-pro&quot;&gt;Linkedin&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&quot;&gt;GitHub&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invitJVCZfTVf5A&quot;&gt;Discord&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rustlang_u&quot;&gt;Reddit&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Telegram&lt;&#x2F;a&gt; |
&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;–í–∏–≤—á–∞–π–º–æ Rust ü¶Ä –†–∞–∑–æ–º!&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/readme/</link>
            <guid>https://example.com/blog/posts/readme/</guid>
            <description>&lt;!-- ![Rust](&#x2F;img&#x2F;logo&#x2F;Logo2.jpg) --&gt;
&lt;h1 id=&quot;crab-learn-rust-together-blue-heart-yellow-heart&quot;&gt;ü¶Ä Learn Rust Together &lt;a href=&quot;readme_ua.md#-%D0%B2%D0%B8%D0%B2%D1%87%D0%B0%D1%94%D0%BC%D0%BE-rust-%D1%80%D0%B0%D0%B7%D0%BE%D0%BC-&quot;&gt;üíôüíõ&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&#x2F;learn_rust_together&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang-ulearn_rust_together&#x2F;59713d4ae68edc4aa1447a1194f772adb4cecde0&#x2F;&#x2F;logo&#x2F;Collage_2.jpg&quot; alt=&quot;Learn Rust Together&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;[:exclamation:] We condemn in the strongest possible terms Russia‚Äôs :pirate_flag: unprovoked, unjust and illegal invasion of Ukraine, a sovereign and democratic state.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;general-purpose-official-resources&quot;&gt;General-purpose official resources&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;who-are-we&quot;&gt;Who are we?&lt;&#x2F;h2&gt;
&lt;p&gt;We are a Ukrainian branch of the community of Rust enthusiasts. More &lt;a href=&quot;about_us.md&quot;&gt;about us&lt;&#x2F;a&gt; and our values.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-this-about&quot;&gt;What is this about?&lt;&#x2F;h2&gt;
&lt;p&gt;This repostory contains nearly a dozen curated collections: learning materials, toolboxes, newspapers, working groups and a collection of other collections. Everything you may find useful if you are interested in Development in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Here you can find:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:footprints:Ô∏è &lt;a href=&quot;introduction.md&quot;&gt;Start&lt;&#x2F;a&gt; : setup and step-by-step introduction into development on Rust.&lt;&#x2F;li&gt;
&lt;li&gt;:mortar_board: &lt;a href=&quot;learn.md&quot;&gt;Learn&lt;&#x2F;a&gt; : collection of materials to learn Rust.&lt;&#x2F;li&gt;
&lt;li&gt;:blue_book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sger&#x2F;RustBooks&quot;&gt;Read&lt;&#x2F;a&gt; : books on Rust.&lt;&#x2F;li&gt;
&lt;li&gt;:chart_with_upwards_trend: &lt;a href=&quot;cheat_sheets.md&quot;&gt;Systemize&lt;&#x2F;a&gt; : collection of cheat sheets.&lt;&#x2F;li&gt;
&lt;li&gt;:speech_balloon: &lt;a href=&quot;communicate.md&quot;&gt;Communicate&lt;&#x2F;a&gt; : collection of chats and forums.&lt;&#x2F;li&gt;
&lt;li&gt;:question: &lt;a href=&quot;about_us.md#question-faq&quot;&gt;Get answer&lt;&#x2F;a&gt; : our FAQ and community rules.&lt;&#x2F;li&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physics, Linear Algebra, Machine Learning, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust that are distributed and used outside of Rust&#x27;s ecosystem.&lt;&#x2F;li&gt;
&lt;li&gt;:label: &lt;a href=&quot;collection_of_collections.md#label-projects-catalogue&quot;&gt;Search&lt;&#x2F;a&gt; : projects catalogue.&lt;&#x2F;li&gt;
&lt;li&gt;:newspaper: &lt;a href=&quot;collection_of_collections.md#newspaper-newspapers-and-working-groups&quot;&gt;Stay competent&lt;&#x2F;a&gt; : newspapers and working groups.&lt;&#x2F;li&gt;
&lt;li&gt;:globe_with_meridians: &lt;a href=&quot;collection_of_collections.md#globe_with_meridians-other-collections-on-rust&quot;&gt;Still not enough&lt;&#x2F;a&gt; : other collections on Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;join&quot;&gt;Join&lt;&#x2F;h2&gt;
&lt;p&gt;üí¨ Join our &lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Telegram-Chat&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;learn_rust_ukr&quot;&gt;Telegram-Channel&lt;&#x2F;a&gt;. &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You may also follow us on these platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustUkraine&quot;&gt;Twitter&lt;&#x2F;a&gt;  |
&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;learntogetherpro&quot;&gt;Facebook&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;company&#x2F;learn-together-pro&quot;&gt;Linkedin&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ua&quot;&gt;GitHub&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invitJVCZfTVf5A&quot;&gt;Discord&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rustlang_u&quot;&gt;Reddit&lt;&#x2F;a&gt; |
&lt;a href=&quot;https:&#x2F;&#x2F;t.mrustlang_ua&quot;&gt;Telegram&lt;&#x2F;a&gt; |
&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs Learn Rust ü¶Ä Together!&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/rust-setup/</link>
            <guid>https://example.com/blog/posts/rust-setup/</guid>
            <description>&lt;h2 id=&quot;gear-how-to-set-up-rust&quot;&gt;:gear: How to set up rust:&lt;&#x2F;h2&gt;
&lt;p&gt;To get started with Rust you obviously have to set up your environment.&lt;br&#x2F;&gt; 
There is a short guide to do this:&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;First of all, you need to install &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustup.rs&quot;&gt;rustup&lt;&#x2F;a&gt;, which is a Rust installer and version management tool.&lt;&#x2F;li&gt;
&lt;li&gt;You may also need to install the &lt;a href=&quot;https:&#x2F;&#x2F;visualstudio.microsoft.com&#x2F;visual-cpp-build-tool&quot;&gt;Visual Studio C++ Build tools&lt;&#x2F;a&gt; if you don‚Äôt have one, cause it‚Äôs mandatory for running the Rust program on Windows.&lt;&#x2F;li&gt;
&lt;li&gt;After the rustup installation is complete you‚Äôll also get the latest stable version of the Rust build tool and package manager  - &lt;code&gt;Cargo&lt;&#x2F;code&gt;, which will help you to build, run and test your projects.&lt;&#x2F;li&gt;
&lt;li&gt;To ensure that Rust and Cargo are installed correctly - run &lt;code&gt;cargo --version&lt;&#x2F;code&gt; in your terminal of choice. &lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Linux&#x2F;Mac:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;To install rustup on Linux or macOS, open a terminal and enter the following command    &lt;code&gt;curl https:&#x2F;&#x2F;sh.rustup.rs -sSf | sh&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Once the Rust installation is complete, the Cargo‚Äôs bin directory (&lt;code&gt;~&#x2F;.cargo&#x2F;bin&lt;&#x2F;code&gt; ‚Äì where all tools are installed) will be added in your PATH environment variable, in &lt;code&gt;~&#x2F;.profile&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;:zap:	To get a more detailed description or other methods of setting up Rust environment - go to our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-ulearn_rust_together&#x2F;blob&#x2F;master&#x2F;learn.md#setup&quot;&gt;list of setup materials&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/toolbox-distros/</link>
            <guid>https://example.com/blog/posts/toolbox-distros/</guid>
            <description>&lt;h1 id=&quot;package-awesome-collection-of-distros&quot;&gt;:package: Awesome Collection of Distros&lt;&#x2F;h1&gt;
&lt;p&gt;Awesome collection of utilities written in Rust to been distributed outside of Rust ecosystem. It is curated by us.&lt;&#x2F;p&gt;
&lt;p&gt;You might also be interested in other tooboxes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;toolbox-distros&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;!-- - []() by []() : --&gt;
&lt;h2 id=&quot;site-generation&quot;&gt;Site Generation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;site_generation&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;‚≠ê &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzolzola&quot;&gt;zola&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&quot;&gt;Vincent Prouillet&lt;&#x2F;a&gt; : static site generator in a single binary&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;mdBook&quot;&gt;mdbook&lt;&#x2F;a&gt; : &lt;a href=&quot;http:&#x2F;&#x2F;rust-lang.github.io&#x2F;mdBook&#x2F;index.html&quot;&gt;documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;squidfunk&#x2F;mkdocs-material&quot;&gt;mkdocs-material&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;squidfunk&quot;&gt;Martin Donath&lt;&#x2F;a&gt; : &lt;a href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;&quot;&gt;site&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-processors&quot;&gt;Data Processors&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;processors&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;01mf02&#x2F;jaq&quot;&gt;jaq&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;01mf02&quot;&gt;Michael F√§rber &lt;&#x2F;a&gt; : JSON processor&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;general-purpose-distros&quot;&gt;General purpose distros&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;general_purpose&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikolassv&#x2F;bartib&quot;&gt;bartib&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikolassv&quot;&gt;Nikolas Schmidt-Voigt&lt;&#x2F;a&gt; : CUI for time tracking&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Byron&#x2F;gitoxide&quot;&gt;gix&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Byron&quot;&gt;Sebastian Thiel&lt;&#x2F;a&gt; : CUI for alternative implementation of Git&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;xsv&quot;&gt;xsv&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : CUI to read read CSV&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cgag&#x2F;loc&quot;&gt;loc&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cgag&quot;&gt;Curtis Gagliardi&lt;&#x2F;a&gt; : CUI to count lines of code quickly&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;tokei&quot;&gt;tokei&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&quot;&gt;Erin P&lt;&#x2F;a&gt; : CUI to count lines of code quickly&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;eve&quot;&gt;eve&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&quot;&gt;Erin P&lt;&#x2F;a&gt; : CUI for environment variables based templating&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aloxaf&#x2F;silicon&quot;&gt;silicon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aloxaf&quot;&gt;Aloxaf&lt;&#x2F;a&gt; : CUI to image of your source code&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KokaKiwi&#x2F;rust-highlight&quot;&gt;rust-highlight&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KokaKiwi&quot;&gt;extrawurst&lt;&#x2F;a&gt; : export Rust code as HTML&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ClementTsang&#x2F;bottom&quot;&gt;bottom&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ClementTsang&quot;&gt;Clement Tsang&lt;&#x2F;a&gt; : cross-platform graphical processystem monitor&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saghm&#x2F;rural&quot;&gt;rural&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saghm&quot;&gt;Saghm Rossi&lt;&#x2F;a&gt; : CUI of HTTP tool, curl-like&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&#x2F;oreutils&quot;&gt;oreutils&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;Manish Goregaokar&lt;&#x2F;a&gt; : collection of distros to replace standard distros on c&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;for-distributed-systems&quot;&gt;For distributed systems&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;distributed_systems&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vectordotdev&#x2F;vector&quot;&gt;vector&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukesteensen&quot;&gt;Luke Steensen&lt;&#x2F;a&gt; : data aggregator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;meilisearch&quot;&gt;meilisearch&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kerollmops&quot;&gt;Cl√©ment Renault&lt;&#x2F;a&gt; : fast search engine&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- xxx : move to backend --&gt;
&lt;h2 id=&quot;network&quot;&gt;Network&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&#x2F;websocat&quot;&gt;websocat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;Vitaly Shukela&lt;&#x2F;a&gt; : CUI to communicate via WebSocket&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZingerLittleBenetop&quot;&gt;netop&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZingerLittleBee&quot;&gt;ZingerLittleBee&lt;&#x2F;a&gt; : network activity monitoring&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburniping&quot;&gt;niping&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburt&quot;&gt;Maxim Zhiburt&lt;&#x2F;a&gt; : ping&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;administration&quot;&gt;Administration&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;administration&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elkowar&#x2F;pipr&quot;&gt;pipr&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elkowar&quot;&gt;ElKowar&lt;&#x2F;a&gt; : interactively write shell pipelines&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wez&#x2F;wezterm&quot;&gt;wezterm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wez&quot;&gt;Wez Furlong&lt;&#x2F;a&gt; : GPU-accelerated cross-platform terminal emulator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alacritty&#x2F;alacritty&quot;&gt;alacritty&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jwilm&quot;&gt;Joe Wilm&lt;&#x2F;a&gt; : cross-platform, OpenGL terminal emulator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrCasCodlog-analyzer-pro&quot;&gt;log-analyzer-pro&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrCasCode&quot;&gt;Mario Casals&lt;&#x2F;a&gt; : log analyzer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;file-system-distros&quot;&gt;File system distros&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;fs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Byron&#x2F;dua-cli&quot;&gt;dua-cli&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Byron&quot;&gt;Sebastian Thiel&lt;&#x2F;a&gt; : CUI to view disk space usage and delete unwanted data&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;watchexec&#x2F;watchexec&quot;&gt;watchexec&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattgreen&quot;&gt;Matt Green&lt;&#x2F;a&gt; : executes commands in response to file modifications&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&#x2F;broot&quot;&gt;broot&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&quot;&gt;Denys S√©guret&lt;&#x2F;a&gt; : CUI for files navigation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;versions-control-systems&quot;&gt;Versions Control Systems&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;vcs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawursgitui&quot;&gt;gitui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawurst&quot;&gt;Stephan Dilly&lt;&#x2F;a&gt; : terminal-ui for git&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;git-grab&quot;&gt;git-grab&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;Wesley Moore&lt;&#x2F;a&gt; : clone a git repository into a standard location organised by domain and path&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-streams-aggregation&quot;&gt;Data streams aggregation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;dsa&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;rsspls&quot;&gt;rsspls&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;Wesley Moore&lt;&#x2F;a&gt; : generate RSS feeds from websites&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- ## System &#x2F; CPU info

( _sys_info_ )

- [Acpi](https:&#x2F;&#x2F;github.com&#x2F;rust-osdev&#x2F;acpi) by [Rust OSDev](https:&#x2F;&#x2F;github.com&#x2F;rust-osdev) : a library to parse ACPI tables and AML
- [pcics](https:&#x2F;&#x2F;github.com&#x2F;pepyakpcics) by [Mikhail Bratchikov](https:&#x2F;&#x2F;github.com&#x2F;pepyaka) : PCI configuration space
- [sysinfo](https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;sysinfo) by [Guillaume Gomez](https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez) : a crate used to get a system&#x27;s information
- [nixinfo](https:&#x2F;&#x2F;github.com&#x2F;Phate6660&#x2F;nixinfo) by [Cpt.Howdy](https:&#x2F;&#x2F;github.com&#x2F;Phate6660) : a lib crate for gathering system info such as cpu, distro, environment, kernel, etc
- [sys-info-rs](https:&#x2F;&#x2F;github.com&#x2F;FillZpp&#x2F;sys-info-rs) by [Siyu Wang](https:&#x2F;&#x2F;github.com&#x2F;FillZpp) : get system information in Rust
- [systemstat](https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech&#x2F;systemstat) by [unrelentingtech](https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech) : a Rust library for getting system information&#x2F;statistics
- [rtop](https:&#x2F;&#x2F;github.com&#x2F;narendasan&#x2F;rtop) by [Naren Dasan](https:&#x2F;&#x2F;github.com&#x2F;narendasan) : a system montior inspired by gtop implemented in Rust


( _sys_info_ ) ( _cpu_ )

- [Cupid](https:&#x2F;&#x2F;github.com&#x2F;FillZpp) by [Jake Goulding](https:&#x2F;&#x2F;github.com&#x2F;shepmaster) : native Rust access to the x86 and x86_64 CPUID instruction
- [cpuid](https:&#x2F;&#x2F;github.com&#x2F;gz&#x2F;rust-cpuid) by [Gerd Zellweger](https:&#x2F;&#x2F;github.com&#x2F;gz) : a library to parse the x86 CPUID instruction, written in rust with no external dependencies
- [cpufeatures](https:&#x2F;&#x2F;github.com&#x2F;rustcrypto&#x2F;utiltree&#x2F;HEAD&#x2F;cpufeatures) by [cpuid](https:&#x2F;&#x2F;github.com&#x2F;RustCrypto) : lightweight and efficient runtime CPU feature detection for aarch64 and x86&#x2F;x86_64 targets

( _sys_info_ ) ( _gpu_ )

- [gpuinfo](https:&#x2F;&#x2F;github.com&#x2F;BDHU&#x2F;gpuinfo) by [Edward Hu](https:&#x2F;&#x2F;github.com&#x2F;BDHU) : a small command-line tool used to query and monitor GPU status
- [gpu-info](https:&#x2F;&#x2F;crates.io&#x2F;crategpu-info) : a minimal command-line utility for querying GPU status

## Benchmark

( _benchmark_ )

- [hyperfine](https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;hyperfine) by [David Peter](https:&#x2F;&#x2F;github.com&#x2F;sharkdp) : a command-line benchmarking tool
- [glassbench](https:&#x2F;&#x2F;github.com&#x2F;Canop&#x2F;glassbench) by [Denys S√©guret](https:&#x2F;&#x2F;github.com&#x2F;Canop) : a micro-benchmark library with memory, to use with cargo bench
- [Criterion.rs](https:&#x2F;&#x2F;github.com&#x2F;bheisler&#x2F;criterion.rs) by [Brook Heisler](https:&#x2F;&#x2F;github.com&#x2F;bheisler) : statistics-driven Microbenchmarking

( _benchmark_ ) ( _cpu_ )

- [ulid-rs](https:&#x2F;&#x2F;github.com&#x2F;suyash&#x2F;ulid-rs) by [Suyash](https:&#x2F;&#x2F;github.com&#x2F;suyash) : Rust implementation of &quot;Universally Unique Lexicographically Sortable Identifier&quot; algorithm
- [Iai](https:&#x2F;&#x2F;github.com&#x2F;bheisler&#x2F;iai) by [Brook Heisler](https:&#x2F;&#x2F;github.com&#x2F;bheisler) : experimental One-shot Benchmark Framework
- [Shumai](https:&#x2F;&#x2F;github.com&#x2F;XiangpengHao&#x2F;shumai) by [Xiangpeng Hao](https:&#x2F;&#x2F;github.com&#x2F;XiangpengHao) : a multi-thread benchmarking framework that produces accurate and reproducible results
- [gemm-benchmark](https:&#x2F;&#x2F;github.com&#x2F;danieldk&#x2F;gemm-benchmark) by [Dani√´l de Kok](https:&#x2F;&#x2F;github.com&#x2F;danieldk) : a small [sd]gemm benchmark based, similar to ACES DGEMM

( _benchmark_ ) ( _gpu_ )

- [criterion-cuda](https:&#x2F;&#x2F;github.com&#x2F;theHamstcriterion-cuda) by [Stephan Seitz](https:&#x2F;&#x2F;github.com&#x2F;theHamsta) : crate provides the Measurement CudaTime for benchmarking CUDA kernels using criterion-rs
- [rustGPU](https:&#x2F;&#x2F;github.com&#x2F;eholk&#x2F;RustGPU) by [Eric Holk](https:&#x2F;&#x2F;github.com&#x2F;eholk) : a proof of concept for writing GPU kernels in Rust
- [opencl3](https:&#x2F;&#x2F;github.com&#x2F;kenbopencl3) by [Ken Barker](https:&#x2F;&#x2F;github.com&#x2F;kenba) : implementation of the Khronos OpenCL API
- [rust-aes-proofs](https:&#x2F;&#x2F;github.com&#x2F;subspacrust-aes-proofs) by [subspace](https:&#x2F;&#x2F;github.com&#x2F;subspace) : various AES-based Proof-of-Replication and Proof-of-Time implementations and benchmarks --&gt;
&lt;!-- qqq : add tag::utility for each utility --&gt;
&lt;!-- qqq : sort tags --&gt;
&lt;!-- qqq : emoji instead of tags? --&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;( &lt;em&gt;site_generation&lt;&#x2F;em&gt; ) - generating a site with documentation from either MD or similar languages&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;general_purpose&lt;&#x2F;em&gt; ) - general purpose distros&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;posix&lt;&#x2F;em&gt; ) - standard posix shell commands related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;processors&lt;&#x2F;em&gt; ) - data processors&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;fs&lt;&#x2F;em&gt; ) - file system&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;vcs&lt;&#x2F;em&gt; ) - versions controls systems&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;dsa&lt;&#x2F;em&gt; ) - data streams aggregation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;sys_info&lt;&#x2F;em&gt; ) - get system information&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;benchmark&lt;&#x2F;em&gt; ) - benchmarking tools and libraries&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cpu&lt;&#x2F;em&gt; ) - CPU related libraries&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;gpu&lt;&#x2F;em&gt; ) - GPU related libraries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/toolbox-general/</link>
            <guid>https://example.com/blog/posts/toolbox-general/</guid>
            <description>&lt;h1 id=&quot;wrench-rust-developer-s-toolbox&quot;&gt;:wrench: Rust Developer&#x27;s Toolbox&lt;&#x2F;h1&gt;
&lt;!--xxx : https:&#x2F;&#x2F;github.com&#x2F;dherman --&gt;
&lt;!-- - []() by []() : --&gt;
&lt;p&gt;Awesome collection of crates for productive development in Rust. It is curated by us.&lt;&#x2F;p&gt;
&lt;p&gt;You might also be interested in other tooboxes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;toolbox-general&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;errors-handling&quot;&gt;Errors handling&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;error&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zkamiette&quot;&gt;miette&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zkat&quot;&gt;Kat March√°n&lt;&#x2F;a&gt; : error reporting facilities&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;thiserror&quot;&gt;thiserror&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : macro error for struct and enum error types&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;anyhow&quot;&gt;anyhow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : a generic error trait&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;informalsystemflex-error&quot;&gt;flex-error&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;soareschen&quot;&gt;Soares Chen&lt;&#x2F;a&gt; : adapter for error handling approaches&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;macros&quot;&gt;Macros&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;macro&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;paste&quot;&gt;paste&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : workaround of concatenating identifiers problem&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;cargo-expand&quot;&gt;cargo-expand&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : extension for cargo to expand macros&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;syn&quot;&gt;syn&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : parser for writing macros&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;quote&quot;&gt;quote&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : tool to write procedure macros&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;rustversion&quot;&gt;rustversion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : conditional compilation according to rustc compiler version&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&#x2F;macro_railroad&quot;&gt;macro_railroad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : to generate syntax diagrams for macro_rules!()&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lukaslueg.github.io&#x2F;macro_railroad_wasm_demo&quot;&gt;macro_railroad as service&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : a service to generate syntax diagrams for macro_rules!()&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodlitrs&quot;&gt;litrs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodt&quot;&gt;Lukas Kalbertodt&lt;&#x2F;a&gt; : parse Rust literals&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meta&quot;&gt;Meta&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;meta&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rukai&#x2F;treeflection&quot;&gt;treeflection&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rukai&quot;&gt;Lucas Kent&lt;&#x2F;a&gt; ( &lt;em&gt;idea&lt;&#x2F;em&gt; ) : pseudo-reflection for structs and enums&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;decorators&quot;&gt;Decorators&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;meta&lt;&#x2F;em&gt; ) ( &lt;em&gt;decorator&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;cfg_aliases&quot;&gt;cfg_aliases&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zicklag&quot;&gt;Zicklag&lt;&#x2F;a&gt; : aliasing of cfg&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusmaplit&quot;&gt;maplit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : literal macros for containers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estk&#x2F;literally&quot;&gt;literally&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estk&quot;&gt;estk&lt;&#x2F;a&gt; : alternative literal macros for containers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lambda-fairy&#x2F;if_chain&quot;&gt;if_chain&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lambda-fairy&quot;&gt;Chris Wong&lt;&#x2F;a&gt; : nested if let&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;derives&quot;&gt;Derives&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;meta&lt;&#x2F;em&gt; ) ( &lt;em&gt;derive&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JelteF&#x2F;derive_more&quot;&gt;derive_more&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JelteF&quot;&gt;Jelte Fennema&lt;&#x2F;a&gt; : many useful derives&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&#x2F;derive-new&quot;&gt;derive-new&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;Nick Cameron&lt;&#x2F;a&gt; : derive new&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&#x2F;parse-display&quot;&gt;parse-display&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&quot;&gt;Frozenlib&lt;&#x2F;a&gt; ( &lt;em&gt;parser&lt;&#x2F;em&gt; ) ( &lt;em&gt;stringification&lt;&#x2F;em&gt; ) : derive macro Display and FromStr&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;derive_is_enum_variant&quot;&gt;derive_is_enum_variant&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; :  macro to generate the method is_variant for each variant of an enum&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TedDriggfield_names&quot;&gt;field_names&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TedDriggs&quot;&gt;Ted Driggs&lt;&#x2F;a&gt; : derive to list names of fields bound to the structure&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Peternator7&#x2F;strum&quot;&gt;strum&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Peternator7&quot;&gt;Peter Glotfelty&lt;&#x2F;a&gt; ( &lt;em&gt;stringification&lt;&#x2F;em&gt; ) : enum stringification, parsing and iterating&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;derive_is_enum_variant&quot;&gt;derive_is_enum_variant&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : macro to generate the method is_variant for each variant of an enum&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;compilers-static-analyzers-code-formatters&quot;&gt;Compilers, Static Analyzers, code formatters&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;compiler&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sslab-gatech&#x2F;Rudra&quot;&gt;rudra&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Qwaz&quot;&gt;Yechan Bae&lt;&#x2F;a&gt; : undefined behavior detection&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;prettyplease --&gt;
&lt;h2 id=&quot;compile-time&quot;&gt;Compile-time&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;compile_time&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-phf&#x2F;rust-phf&quot;&gt;phf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&quot;&gt;Steven Fackler&lt;&#x2F;a&gt; : compile-time hashmap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tkaitchuck&#x2F;constrandom&quot;&gt;constrandom&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tkaitchuck&quot;&gt;Tom Kaitchuck&lt;&#x2F;a&gt; : random compile-time constants&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nvzqz&#x2F;static-assertions-rs&quot;&gt;static_assertions&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nvzqz&quot;&gt;Nikolai Vazquez&lt;&#x2F;a&gt; : compile-time cecks&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodreinda&quot;&gt;reinda&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodt&quot;&gt;Lukas Kalbertodt&lt;&#x2F;a&gt; : embed s&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustyhordvergen&quot;&gt;vergen&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jasonozias&quot;&gt;Jason Ozias&lt;&#x2F;a&gt; : ( &lt;em&gt;hardware&lt;&#x2F;em&gt; ) ( &lt;em&gt;compile_time&lt;&#x2F;em&gt; ) compile-time constants about process of compilation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pyrossh&#x2F;rust-embed&quot;&gt;rust-embed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pyrossh&quot;&gt;&lt;&#x2F;a&gt; : embed files into the rust binary at compile time during release and loads the file from the fs during dev&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;global&quot;&gt;Global&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;global&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&#x2F;once_cell&quot;&gt;once_cell&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;Aleksey Kladov&lt;&#x2F;a&gt; : single assignment cells and lazy statics without macros, the most popular&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;lazy-static.rs&quot;&gt;lazy_static&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kimundi&quot;&gt;Marvin L√∂bel&lt;&#x2F;a&gt; : macro for defining lazy evaluated static variables&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ui&quot;&gt;UI&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;gui&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vislyhq&#x2F;stretch&quot;&gt;stretch&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vislyhq&quot;&gt;Emil Sj√∂lander&lt;&#x2F;a&gt; : flexbox implementation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gui&quot;&gt;GUI&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;gui&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&quot;&gt;Emil Ernerfeldt&lt;&#x2F;a&gt; : an immediate mode GUI&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rimgui-rs&quot;&gt;imgui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gekkio&quot;&gt;Joonas Javanainen&lt;&#x2F;a&gt; : an immediate mode GUI&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iced-riced&quot;&gt;iced&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&quot;&gt;H√©ctor Ram√≥n&lt;&#x2F;a&gt; : cross-platform GUI inspired by Elm&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Relm4&#x2F;relm4&quot;&gt;relm4&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AaronErhardt&quot;&gt;Aaron Erhardt&lt;&#x2F;a&gt; : inspired by Elm and based on gtk4-rs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ax9D&#x2F;pw-viz&quot;&gt;pw-viz&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ax9D&quot;&gt;Ax9D&lt;&#x2F;a&gt; : graph editor&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&#x2F;kayak_ui&quot;&gt;kayak_ui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&quot;&gt;John Mitchell&lt;&#x2F;a&gt; : game UI&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elkowar&#x2F;eww&quot;&gt;eww&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elkowar&quot;&gt;ElKowar&lt;&#x2F;a&gt; : drop-down widgets&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech&#x2F;unixbar&quot;&gt;unixbar&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech&quot;&gt;Greg V&lt;&#x2F;a&gt; : UNIX-style desktop bar&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;command-user-interface-input-output&quot;&gt;Command user interface input &#x2F; output&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;cui&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&#x2F;dialoguer&quot;&gt;dialoguer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&quot;&gt;Armin Ronacher&lt;&#x2F;a&gt; : command line prompts&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;console-rindicatif&quot;&gt;indicatif&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&quot;&gt;Armin Ronacher&lt;&#x2F;a&gt; : command line progress reporting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;textual-user-interface-input-output&quot;&gt;Textual user interface input &#x2F; output&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;tui&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fdehau&#x2F;tui-rs&quot;&gt;tui-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fdehau&quot;&gt;Florian Dehau&lt;&#x2F;a&gt; : the most popular TUI framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gyscoCursive&quot;&gt;cursive&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gyscos&quot;&gt;Alexandre Bury&lt;&#x2F;a&gt; : TUI framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburexpectrl&quot;&gt;expectrl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburt&quot;&gt;Maxim Zhiburt&lt;&#x2F;a&gt; ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) ( &lt;em&gt;os&lt;&#x2F;em&gt; ) : controlling input&#x2F;output of interactive programs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;command-user-interface-parsing&quot;&gt;Command user interface parsing&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;cui&lt;&#x2F;em&gt; ) ( &lt;em&gt;cui_parsing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clap-rclap&quot;&gt;clap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kbknapp&quot;&gt;Kevin K.&lt;&#x2F;a&gt; : the most popular CUI parsing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeXitoi&#x2F;structopt&quot;&gt;structopt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeXitoi&quot;&gt;Guillaume P.&lt;&#x2F;a&gt; : CUI parsing with a structure&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;pico-args&quot;&gt;pico-args&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&quot;&gt;Yevhenii Reizner&lt;&#x2F;a&gt; : smallest one CUI tool&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;terminal&quot;&gt;Terminal&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;terminal&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&#x2F;console&quot;&gt;console&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&quot;&gt;Armin Ronacher&lt;&#x2F;a&gt; : the most popular module to manipulate terminal&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.redox-os.org&#x2F;redox-otermion&quot;&gt;termion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ticki&quot;&gt;Ticki&lt;&#x2F;a&gt; : low-level handling, manipulating and reading information about terminals&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crossterm-rcrossterm&quot;&gt;crossterm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TimonPost&quot;&gt;Timon&lt;&#x2F;a&gt; : cross platform terminal&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softpropatty&quot;&gt;atty&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softprops&quot;&gt;Doug Tangren&lt;&#x2F;a&gt; : check is it a tty&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JohnTitor&#x2F;termize&quot;&gt;termize&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JohnTitor&quot;&gt;Yuki Okushi&lt;&#x2F;a&gt; : terminal size&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eminencterminal-size&quot;&gt;terminal_size&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eminence&quot;&gt;Andrew Chin&lt;&#x2F;a&gt; : terminal size&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&#x2F;terminal-clipboard&quot;&gt;terminal-clipboard&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&quot;&gt;Canop&lt;&#x2F;a&gt; : text only clipboard facade&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;termcolor&quot;&gt;termcolor&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : terminal colors&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodbunt&quot;&gt;bunt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodt&quot;&gt;Lukas Kalbertodt&lt;&#x2F;a&gt; :  colored and formatted text to a terminal&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;davidbittner&#x2F;ansi-parser&quot;&gt;ansi-parser&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;davidbittner&quot;&gt;David Bittner&lt;&#x2F;a&gt; : parseing ANSI escape codes based on nom&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cloud-apis&quot;&gt;Cloud APIs&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;cloud_api&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kbknapp&#x2F;doapi-rs&quot;&gt;doapi&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kbknapp&quot;&gt;Kevin K.&lt;&#x2F;a&gt; : DigitalOcean API v2&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;octocrab&quot;&gt;octocrab&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&quot;&gt;Erin P&lt;&#x2F;a&gt; : GitHub API&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&#x2F;giphy-api&quot;&gt;giphy api&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&quot;&gt;Anthony Dodd&lt;&#x2F;a&gt; : giphy API&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;nodejs-and-js&quot;&gt;NodeJS and JS&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;njs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;neon-bindingneon&quot;&gt;neon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dherman&quot;&gt;Dave Herman&lt;&#x2F;a&gt; : native Node.js modules&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;numToStr&#x2F;snm&quot;&gt;snm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;numToStr&quot;&gt;Vikas Raj&lt;&#x2F;a&gt; : environment manager, like NVM&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Schniz&#x2F;fnm&quot;&gt;fnm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Schniz&quot;&gt;Gal Schlezinger&lt;&#x2F;a&gt; : Fast and simple Node.js version manager&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;volta-cli&#x2F;volta&quot;&gt;volta&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dherman&quot;&gt;Dave Herman&lt;&#x2F;a&gt; : JS Toolchains&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;building-and-optimization&quot;&gt;Building and Optimization&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;build&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&#x2F;trunk&quot;&gt;trunk&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&quot;&gt;Anthony Dodd&lt;&#x2F;a&gt; ( &lt;em&gt;wasm&lt;&#x2F;em&gt; ) : WebAssembly web application bundler&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;cross&quot;&gt;cross&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) ( &lt;em&gt;cross_compile&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : cross-compilation and cross-testing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagiegurari&#x2F;duckscript&quot;&gt;duckscript&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagiegurari&quot;&gt;Sagie Gur-Ari&lt;&#x2F;a&gt; : utility to be cross-platform shell.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagiegurari&#x2F;cargo-make&quot;&gt;cargo-make&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagiegurari&quot;&gt;Sagie Gur-Ari&lt;&#x2F;a&gt; ( &lt;em&gt;utility&lt;&#x2F;em&gt; ) : make-like utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;casey&#x2F;just&quot;&gt;just&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;casey&quot;&gt;Casey Rodarmor&lt;&#x2F;a&gt; ( &lt;em&gt;utility&lt;&#x2F;em&gt; ) : make-like utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;burtonageo&#x2F;cargo-bundle&quot;&gt;cargo-bundle&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;burtonageo&quot;&gt;George Burton&lt;&#x2F;a&gt; : cross-platform bundling&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parcel-bundler&#x2F;parcel-css&quot;&gt;parcel_css&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;devongovett&quot;&gt;Devon Govett&lt;&#x2F;a&gt; ( &lt;em&gt;parser&lt;&#x2F;em&gt; ) : CSS parser, transformer, and minifier&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&#x2F;minify-html&quot;&gt;minify-html&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&quot;&gt;Wilson Lin&lt;&#x2F;a&gt; ( &lt;em&gt;html&lt;&#x2F;em&gt; ) : HTML minifier&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tauri-apptauri&quot;&gt;tauri&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rstoenescu&quot;&gt;Razvan Stoenescu&lt;&#x2F;a&gt; : desktop applications with a web frontend&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&#x2F;built&quot;&gt;built&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : information when and how it was built&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kobzol&#x2F;cargo-pgo&quot;&gt;cargo-pgo&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kobzol&quot;&gt;Jakub Ber√°nek&lt;&#x2F;a&gt; ( &lt;em&gt;reading&lt;&#x2F;em&gt; ) ( &lt;em&gt;article&lt;&#x2F;em&gt; ) : profile guided optimzation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cross-compile&quot;&gt;Cross-compile&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;cross_compile&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;cross&quot;&gt;cross&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) ( &lt;em&gt;cross_compile&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : cross-compilation and cross-testing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpoechtrager&#x2F;osxcross&quot;&gt;osxcross&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpoechtrager&quot;&gt;Thomas P√∂chtrager&lt;&#x2F;a&gt; : cross toolchain for Linux and *BSD&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cargo-extension&quot;&gt;Cargo extension&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;cargo&lt;&#x2F;em&gt; ) ( &lt;em&gt;build&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;killercup&#x2F;cargo-edit&quot;&gt;cargo-edit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;killercup&quot;&gt;Pascal Hertleif&lt;&#x2F;a&gt; : utility to add, remove, upgrade cargo dependencies&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fornwall&#x2F;rust-script&quot;&gt;rust-script&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fornwall&quot;&gt;Fredrik Fornwall&lt;&#x2F;a&gt; : utility to interpret rust files and expressions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;watchexec&#x2F;cargo-watch&quot;&gt;cargo-watch&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;passcod&quot;&gt;F√©lix Saparelli&lt;&#x2F;a&gt; : utility to watch over your project&#x27;s source for changes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;cargo-binutils&quot;&gt;cargo-binutils&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; : LLVM utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cargo-generatcargo-generate&quot;&gt;cargo-generate&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ashleygwilliams&quot;&gt;ashley williams&lt;&#x2F;a&gt; : utility to instantiate a template ( &lt;em&gt;templating&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratecargo-depgraph&quot;&gt;cargo-depgraph&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;blog.turbo.fish&#x2F;&quot;&gt;Jonas Platte&lt;&#x2F;a&gt; : generate dependencies graph&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&#x2F;cargo_metadata&quot;&gt;cargo_metadata&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;Oli Scherer&lt;&#x2F;a&gt; : information about cargo module&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&#x2F;cargo-cache&quot;&gt;cargo-cache&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;Matthias Kr√ºger&lt;&#x2F;a&gt; : manage cargo cache, cleaning cache&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&#x2F;cargo-when&quot;&gt;cargo-when&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&quot;&gt;Kathryn Long&lt;&#x2F;a&gt; : run conditionally upon rustc version and environment&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mihai-dinculescu&#x2F;cargo-wipe&quot;&gt;cargo-wipe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mihai-dinculescu&quot;&gt;Mihai Dinculescu&lt;&#x2F;a&gt; : cleaning, removing artifacts&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nabijaczleweli&#x2F;cargo-update&quot;&gt;cargo-update&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nabijaczleweli&quot;&gt;Nabijaczleweli&lt;&#x2F;a&gt; : update installed globally executables&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;video&quot;&gt;Video&lt;&#x2F;h2&gt;
&lt;p&gt;:movie_camera:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&#x2F;camera_capture&quot;&gt;camera_capture&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;Oli Scherer&lt;&#x2F;a&gt; : webcam screenshot&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;testing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;cross&quot;&gt;cross&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) ( &lt;em&gt;cross_compile&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : cross-compilation and cross-testing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;tremain&#x2F;crates&#x2F;test&quot;&gt;wasm-bindgen-test&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; ( &lt;em&gt;wasm&lt;&#x2F;em&gt; ) : run tests of wasm-based application in browser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;trybuild&quot;&gt;trybuild&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : negative testing, when error during compilation is expected result.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburexpectrl&quot;&gt;expectrl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburt&quot;&gt;Maxim Zhiburt&lt;&#x2F;a&gt; ( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;tui&lt;&#x2F;em&gt; ) ( &lt;em&gt;os&lt;&#x2F;em&gt; ) : controlling input&#x2F;output of interactive programs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dentosal&#x2F;portpicker-rs&quot;&gt;portpicker&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dentosal&quot;&gt;Hannes Karppila&lt;&#x2F;a&gt; ( &lt;em&gt;network&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : pick a free unused port&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frondeutest-case&quot;&gt;test-case&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frondeus&quot;&gt;Wojciech Polak&lt;&#x2F;a&gt; : procedural macro attribute for adding test cases&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cucumber-rcucumber&quot;&gt;cucumber&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bbqsrc&quot;&gt;Brendan Molloy&lt;&#x2F;a&gt; : BBD&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tikv&#x2F;pprof-rs&quot;&gt;pprof&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;YangKeao&quot;&gt;YangKeao&lt;&#x2F;a&gt; : CPU profiler&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&#x2F;compiletest-rs&quot;&gt;compiletest&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;Manish Goregaokar&lt;&#x2F;a&gt; : an extraction of the compiletest utility from the Rust compiler&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-fuzz&#x2F;cargo-fuzz&quot;&gt;cargo-fuzz&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;Manish Goregaokar&lt;&#x2F;a&gt; : testing framework for fuzzy testing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;performance-benchmarking&quot;&gt;Performance benchmarking&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;perf_benchmark&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fcsonlindrill&quot;&gt;drill&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fcsonline&quot;&gt;Ferran Basora&lt;&#x2F;a&gt; ( &lt;em&gt;network&lt;&#x2F;em&gt; ) ( &lt;em&gt;perf_benchmark&lt;&#x2F;em&gt; ) : HTTP load testing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tag1consulting&#x2F;goose&quot;&gt;goose&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jeremyandrews&quot;&gt;Jeremy Andrews&lt;&#x2F;a&gt; ( &lt;em&gt;network&lt;&#x2F;em&gt; ) ( &lt;em&gt;perf_benchmark&lt;&#x2F;em&gt; ) : HTTP load testing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rloom&quot;&gt;loom&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carllerche&quot;&gt;Carl Lerche&lt;&#x2F;a&gt; : ( &lt;em&gt;perf_benchmark&lt;&#x2F;em&gt; ) concurrency permutation testing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;webassembly&quot;&gt;WebAssembly&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;wasm&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&#x2F;trunk&quot;&gt;trunk&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&quot;&gt;Anthony Dodd&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) : WebAssembly web application bundler&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&quot;&gt;wasm-bindgen&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : interactions between WebAssembly modules and JavaScript&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobhellermann&#x2F;wasm-server-runner&#x2F;tremain&quot;&gt;wasm-server-runner&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobhellermann&quot;&gt;Jakob Hellermann&lt;&#x2F;a&gt; : run in the browser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;tremain&#x2F;crates&#x2F;test&quot;&gt;wasm-bindgen-test&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : run tests of wasm-based application in browser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;console_error_panic_hook&quot;&gt;console_error_panic_hook&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : A panic hook for wasm&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-snip&quot;&gt;wasm-snip&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : utility to remove function body from a wasm file&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bytecodealliancwasm-tools&quot;&gt;wasm-tools&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yurydelendik&quot;&gt;Yury Delendik&lt;&#x2F;a&gt;: tooling for WebAssembly&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bytecodealliancwasmtime&quot;&gt;wasmtime&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stoklund&quot;&gt;Jakob Stoklund Olesen&lt;&#x2F;a&gt; : standalone JIT-style runtime&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wasmerio&#x2F;wasmer&quot;&gt;wasmer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;syrusakbary&quot;&gt;Syrus Akbary&lt;&#x2F;a&gt;
&lt;em&gt;error&lt;&#x2F;em&gt; ) : Debug panics on wasm32-unknown-unknown by providing a panic hook that forwards panic messages to console&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;twiggy&quot;&gt;twiggy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : utility to profile wasm code size&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;binaryen&quot;&gt;wasm-opt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kripken&quot;&gt;Alon Zakai&lt;&#x2F;a&gt; : utility to optimize wasm file&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-pack&quot;&gt;wasm-pack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ashleygwilliams&quot;&gt;ashley williams&lt;&#x2F;a&gt; : wasn-bindgen and binaryen&#x2F;wasm-opt as single utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bytecodealliancwizer&quot;&gt;wizer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : performance optimization by compile-time pre-initialization&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wee_alloc&quot;&gt;wee_alloc&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : 1kB-size memory allocator for size-optimized builds&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paritytech&#x2F;parity-wasm&quot;&gt;parity-wasm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NikVolf&quot;&gt;Nikolay Volf&lt;&#x2F;a&gt; : read wasm files&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- - [cargo-web](https:&#x2F;&#x2F;github.com&#x2F;koutcargo-web) by [Koute](https:&#x2F;&#x2F;github.com&#x2F;koute) : cargo subcommand for Web --&gt;
&lt;h2 id=&quot;windowing&quot;&gt;Windowing&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;windowing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&quot;&gt;Pierre Krieger&lt;&#x2F;a&gt; : cross-platform window creation and management&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boscop&#x2F;web-view&quot;&gt;web-view&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boscop&quot;&gt;Boscop&lt;&#x2F;a&gt; : bindings for webview, a tiny cross-platform library&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-streams-aggregation&quot;&gt;Data streams aggregation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;dsa&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;feedfinder&quot;&gt;feedfinder&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;feedfinder&quot;&gt;Wesley Moore&lt;&#x2F;a&gt; ( &lt;em&gt;html&lt;&#x2F;em&gt; ) : auto-discovery of feeds in HTML&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;html-generating-parsing-transformation&quot;&gt;HTML generating &#x2F; parsing &#x2F; transformation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;html&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;feedfinder&quot;&gt;feedfinder&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&#x2F;feedfinder&quot;&gt;Wesley Moore&lt;&#x2F;a&gt; ( &lt;em&gt;dsa&lt;&#x2F;em&gt; ) : auto-discovery of feeds in HTML&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;utkarshkukreti&#x2F;markup.rs&quot;&gt;markup&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;utkarshkukreti&quot;&gt;Utkarsh Kukreti&lt;&#x2F;a&gt; : template engine to generate HTML&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuchiki-rkuchiki&quot;&gt;kuchiki&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;Simon Sapin&lt;&#x2F;a&gt; : HTML&#x2F;XML tree manipulation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;html5ever&quot;&gt;html5ever&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;Keegan McAllister&lt;&#x2F;a&gt; : high-performance HTML5 parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&#x2F;minify-html&quot;&gt;minify-html&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&quot;&gt;Wilson Lin&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) : HTML minifier&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kivikakk&#x2F;comrak&quot;&gt;comrak&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kivikakk&quot;&gt;Asherah Connor&lt;&#x2F;a&gt; : GFM compatible Markdown parser and renderer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;web-dom&quot;&gt;Web DOM&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;web_frontend&lt;&#x2F;em&gt; ) ( &lt;em&gt;dom&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iamcodemaker&#x2F;console_log&quot;&gt;console_log&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iamcodemaker&quot;&gt;Matthew Nicholson&lt;&#x2F;a&gt; : A logger that routes messages to the browser&#x27;s console&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koutstdweb&quot;&gt;stdweb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koute&quot;&gt;Koute&lt;&#x2F;a&gt; : standard library for the client-side Web&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DoumanAsh&#x2F;web-log&quot;&gt;web-log&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DoumanAsh&quot;&gt;Douman&lt;&#x2F;a&gt; : minimal wrapper over browser console&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;tremain&#x2F;crates&#x2F;web-sys&quot;&gt;web-sys&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : Raw wasm-bindgen imports for all of the Web&#x27;s APIsDescription&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;tremain&#x2F;crates&#x2F;js-sys&quot;&gt;js-sys&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; ( &lt;em&gt;bindings&lt;&#x2F;em&gt; ) : Raw bindings to JS global APIs for projects using wasm-bindgen&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;gloo&quot;&gt;gloo&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : alternative of web-sys&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;tremain&#x2F;crates&#x2F;futures&quot;&gt;wasm-bindgen-futures&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; ( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) : bridges the gap between a Rust Future and a JavaScript Promise&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;web-frontend&quot;&gt;Web Frontend&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;web_frontend&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sycamore-rsycamore&quot;&gt;sycamore&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukechu10&quot;&gt;Luke Chu&lt;&#x2F;a&gt; : reactive frontend&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yewstack&#x2F;yew&quot;&gt;yew&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DenisKolodin&quot;&gt;Denis Kolodin&lt;&#x2F;a&gt; : Elm-inspired frontend&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&#x2F;ybc&quot;&gt;ybc&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thedodd&quot;&gt;Anthony Dodd&lt;&#x2F;a&gt; : a Yew component library based on the Bulma CSS framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seed-rseed&quot;&gt;seed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;David-OConnor&quot;&gt;David O&#x27;Connor&lt;&#x2F;a&gt; : Elm-inspired frontend&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;web-backend&quot;&gt;Web Backend&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;web_backend&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&#x2F;Rocket&quot;&gt;rocket&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&lt;&#x2F;a&gt; : one of the most popular web backend frameworks&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actix&#x2F;actix&quot;&gt;actix&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fafhrd91&quot;&gt;Nikolay Kim&lt;&#x2F;a&gt; : one of the most popular web backend frameworks&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-raxum&quot;&gt;axum&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidpdrsn&quot;&gt;David Pedersen&lt;&#x2F;a&gt; : tokio-based web backend framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rksm&#x2F;axum-yew-setup&quot;&gt;axum-yew-setup&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rksm&quot;&gt;Robert Krahn&lt;&#x2F;a&gt; : starter project that sets up axum and yew for full stack&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;basic-http-server&quot;&gt;basic-http-server&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;Brian Anderson&lt;&#x2F;a&gt; : a simple static HTTP server, for learning and local development&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodpenguin&quot;&gt;penguin&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodt&quot;&gt;Lukas Kalbertodt&lt;&#x2F;a&gt; : a static server&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;reqwest&quot;&gt;reqwest&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&quot;&gt;Sean McArthur&lt;&#x2F;a&gt; : high-level HTTP client&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&quot;&gt;hyper&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&quot;&gt;Sean McArthur&lt;&#x2F;a&gt; : low-level HTTP client&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;headers&quot;&gt;headers&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;reem&quot;&gt;Jonathan Reem&lt;&#x2F;a&gt; : HTTP Headers for hyper&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&quot;&gt;Sean McArthur&lt;&#x2F;a&gt; : composable, web server framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;breard-r&#x2F;libreauth&quot;&gt;libreauth&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;breard-r&quot;&gt;&lt;&#x2F;a&gt; : user authentication&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&#x2F;cookie-rs&quot;&gt;cookie&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&lt;&#x2F;a&gt; : HTTP cookie parsing and cookie jar management&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vectordotdev&#x2F;vector&quot;&gt;vector&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukesteensen&quot;&gt;Luke Steensen&lt;&#x2F;a&gt; : data aggregator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qarux&#x2F;learn_rust_together&#x2F;blob&#x2F;master&#x2F;research&#x2F;rust-backend-frameworks-comparison.md&quot;&gt;Rust back-end frameworks comparison&lt;&#x2F;a&gt; : bunch of back-end frameworks comparison&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- - [miniserve](https:&#x2F;&#x2F;github.com&#x2F;svenstaro&#x2F;miniserve) by [Sven-Hendrik Haase](https:&#x2F;&#x2F;github.com&#x2F;svenstaro) : CUI to serve files and dirs over HTTP based on Actix --&gt;
&lt;h2 id=&quot;network&quot;&gt;Network&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;network&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&#x2F;rust-imap&quot;&gt;imap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;Jon Gjengset&lt;&#x2F;a&gt; : IMAP interface&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&#x2F;r2d2&quot;&gt;r2d2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&quot;&gt;Steven Fackler&lt;&#x2F;a&gt; : agnostic connection pool&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-pcap&#x2F;pcap&quot;&gt;pcap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ebfull&quot;&gt;Sean Bowe&lt;&#x2F;a&gt; : packet sniffing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&#x2F;websocat&quot;&gt;websocat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;Vitaly Shukela&lt;&#x2F;a&gt; : CUI to communicate via WebSocket ( &lt;em&gt;cui&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZingerLittleBenetraffic&quot;&gt;netraffic&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZingerLittleBee&quot;&gt;ZingerLittleBee&lt;&#x2F;a&gt; : statistics network traffic&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dentosal&#x2F;portpicker-rs&quot;&gt;portpicker&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dentosal&quot;&gt;Hannes Karppila&lt;&#x2F;a&gt; ( &lt;em&gt;network&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : pick a free unused port&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fcsonlindrill&quot;&gt;drill&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fcsonline&quot;&gt;Ferran Basora&lt;&#x2F;a&gt; ( &lt;em&gt;network&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : HTTP load testing application&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;database&quot;&gt;Database&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;db&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diesel-rdiesel&quot;&gt;diesel&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;Sage Griffin&lt;&#x2F;a&gt; : ORM and query builder&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bikeshedder&#x2F;deadpool&quot;&gt;deadpool-postgres&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bikeshedder&quot;&gt;Michael P. Jung&lt;&#x2F;a&gt; : async pool for PostgreSQL&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&#x2F;rust-postgres&quot;&gt;tokio_postgres&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&quot;&gt;Steven Fackler&lt;&#x2F;a&gt; : PostgreSQL driver&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;launchbadgsqlx&quot;&gt;sqlx&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mehcode&quot;&gt;Ryan Leckey&lt;&#x2F;a&gt; : SQL DBMS driver&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NyxCodormx&quot;&gt;ormx&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NyxCode&quot;&gt;NyxCode&lt;&#x2F;a&gt; : orm-like features to sqlx&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softpropdynomite&quot;&gt;dynomite&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softprops&quot;&gt;Doug Tangren&lt;&#x2F;a&gt; : DynamoDB binding&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&#x2F;redis-rs&quot;&gt;redis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&quot;&gt;Armin Ronacher&lt;&#x2F;a&gt; : Redis binding&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apacharrow-datafusion&quot;&gt;datafusion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacques-n&quot;&gt;Jacques Nadeau&lt;&#x2F;a&gt; ( &lt;em&gt;db&lt;&#x2F;em&gt; ) ( &lt;em&gt;data_science&lt;&#x2F;em&gt; ) : query engine from Apache&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mongodb&#x2F;mongo-rust-driver&quot;&gt;mongodb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saghm&quot;&gt;Saghm Rossi&lt;&#x2F;a&gt; : official MongoDB binding&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mongodb&#x2F;monger&quot;&gt;monger&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saghm&quot;&gt;Saghm Rossi&lt;&#x2F;a&gt; : MongoDB version manager&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rusqlitrusqlite&quot;&gt;rusqlite&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hydhknn&quot;&gt;hydhknn&lt;&#x2F;a&gt; : bindings to SQLite&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xSiO&#x2F;bolt-rs&quot;&gt;bolt-client&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xSiO&quot;&gt;Luc Street&lt;&#x2F;a&gt; : communicate with Bolt-compatible graph databases&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spacejam&#x2F;sled&quot;&gt;sled&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spacejam&quot;&gt;Tyler Neely&lt;&#x2F;a&gt; : an embedded database&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-science&quot;&gt;Data science&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;( &lt;em&gt;data_science&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pola-rpolars&quot;&gt;polars&lt;&#x2F;a&gt; by [https:&#x2F;&#x2F;github.com&#x2F;ritchie46](Ritchie Vink) : multi-threaded DataFrame library&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apacharrow-datafusion&quot;&gt;datafusion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacques-n&quot;&gt;Jacques Nadeau&lt;&#x2F;a&gt; ( &lt;em&gt;db&lt;&#x2F;em&gt; ) ( &lt;em&gt;data_science&lt;&#x2F;em&gt; ) : query engine from Apache&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apacharrow-rs&quot;&gt;arrow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacques-n&quot;&gt;Jacques Nadeau&lt;&#x2F;a&gt; : working with bytes from Apache&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;functional-programming&quot;&gt;Functional programming&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;functional&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-itertoolitertools&quot;&gt;itertools&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : extra iterator tools  ???&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;version-control-systems&quot;&gt;Version control systems&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;vcs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;git2-rs&quot;&gt;git2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : libgit2 binding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;virtualization&quot;&gt;Virtualization&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;virtualisation&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softpropshiplift&quot;&gt;shiplift&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softprops&quot;&gt;Doug Tangren&lt;&#x2F;a&gt; : maneuvering docker containers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tailhook&#x2F;unshare&quot;&gt;unshare&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tailhook&quot;&gt;Paul Colomiets&lt;&#x2F;a&gt; : low-level linux containers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;async&quot;&gt;Async&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;async&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-pin-project&quot;&gt;pin-project&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-e&quot;&gt;Taiki Endo&lt;&#x2F;a&gt; : synchronization primitives pin-projection&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-pin-project-lite&quot;&gt;pin-project-lite&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-e&quot;&gt;Taiki Endo&lt;&#x2F;a&gt; : synchronization primitives pin-projection, lite version&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rblocking&quot;&gt;blocking&lt;&#x2F;a&gt; by Stjepan Glavina : a thread pool for isolating blocking I&#x2F;O in async environment&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rasync-compat&quot;&gt;async-compat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-e&quot;&gt;Taiki Endo&lt;&#x2F;a&gt; : compatibility adapter between tokio and futures&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pauan&#x2F;rust-signals&quot;&gt;futures-signals&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pauan&quot;&gt;Pauan&lt;&#x2F;a&gt; : reactive signals&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;futures-rs&quot;&gt;futures&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : async interfaces&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rwaker-fn&quot;&gt;waker-fn&lt;&#x2F;a&gt; by Stjepan Glavina : convert closures into waker&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;async-runtimes&quot;&gt;Async Runtimes&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;async&lt;&#x2F;em&gt; ) ( &lt;em&gt;async_runtime&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rtokio&quot;&gt;tokio&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carllerche&quot;&gt;Carl Lerche&lt;&#x2F;a&gt; : asynchronous application framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;async-rasync-std&quot;&gt;async-std&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;skade&quot;&gt;Florian Gilcher&lt;&#x2F;a&gt; : async version of std&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&#x2F;pollster&quot;&gt;pollster&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&quot;&gt;Joshua Barretto&lt;&#x2F;a&gt; : a minimal async executor&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rsmol&quot;&gt;smol&lt;&#x2F;a&gt; by Stjepan Glavina : a small and fast async runtime for Rust&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;concurrency&quot;&gt;Concurrency&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;concurrency&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitvecto-rradium&quot;&gt;radium&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystor&quot;&gt;Nika Layzell &lt;&#x2F;a&gt; : atomic instructions fallback&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rayon-rrayon&quot;&gt;rayon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;Niko Matsakis&lt;&#x2F;a&gt; : data-parallelism&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pauan&#x2F;rust-signals&quot;&gt;futures-signals&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pauan&quot;&gt;Pauan&lt;&#x2F;a&gt; : reactive signals&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crossbeam-rcrossbeam&quot;&gt;crossbeam&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aturon&quot;&gt;Aaron Turon&lt;&#x2F;a&gt; : tools for concurrent programming&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kimundi&#x2F;scoped-threadpool-rs&quot;&gt;scoped_threadpool&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kimundi&quot;&gt;Marvin L√∂bel&lt;&#x2F;a&gt; : scoped and cached threadpools&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;concurrency-primitives&quot;&gt;Concurrency primitives&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) ( &lt;em&gt;primitive&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Amanieu&#x2F;parking_lot&quot;&gt;parking_lot&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Amanieu&quot;&gt;Amanieu d&#x27;Antras&lt;&#x2F;a&gt; : synchronization primitives on steroids&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&#x2F;state&quot;&gt;state&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&lt;&#x2F;a&gt; : HTTP cookie parsing and cookie jar management&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Amanieu&#x2F;thread_local-rs&quot;&gt;thread_local&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Amanieu&quot;&gt;Amanieu d&#x27;Antras&lt;&#x2F;a&gt; : thread-local storage&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&#x2F;flume&quot;&gt;flume&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&quot;&gt;Joshua Barretto&lt;&#x2F;a&gt; : multi-producer, multi-consumer channel&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polyfractal&#x2F;bounded-spsc-queue&quot;&gt;bounded-spsc-queue&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polyfractal&quot;&gt;Zachary Tong&lt;&#x2F;a&gt; : bounded, Single-producer Single-consumer queue (SPSC)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&#x2F;bus&quot;&gt;bus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;Jon Gjengset&lt;&#x2F;a&gt; : lock-free, bounded, single-producer, multi-consumer, broadcast channel&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&#x2F;left-right&quot;&gt;left-right&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;Jon Gjengset&lt;&#x2F;a&gt; : lock-free, read-optimized, concurrency primitive&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&#x2F;evmap&quot;&gt;evmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;Jon Gjengset&lt;&#x2F;a&gt; ( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) : lock-free, eventually consistent, concurrent multi-value map&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xacrimon&#x2F;dashmap&quot;&gt;dashmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xacrimon&quot;&gt;Acrimon Joel&lt;&#x2F;a&gt; ( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) : concurrent HashMap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodatomig&quot;&gt;atomig&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukasKalbertodt&quot;&gt;Lukas Kalbertodt&lt;&#x2F;a&gt; : type constructor of atmotics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;syncell&quot;&gt;syncell&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; : sync alternative to RefCell&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uazu&#x2F;qcell&quot;&gt;qcell&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uazu&quot;&gt;Jim Peters&lt;&#x2F;a&gt; : statically-checked alternatives to RefCell and RwLock&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diwic&#x2F;reffers-rs&quot;&gt;reffers&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diwic&quot;&gt;David Henningsson&lt;&#x2F;a&gt; : wrappers around references, boxes and Arcs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;persistence-and-delayed-execution&quot;&gt;Persistence and delayed execution&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;persistence&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mehcodschedule-rs&quot;&gt;schedule&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mehcode&quot;&gt;Ryan Leckey&lt;&#x2F;a&gt; : in-process cron-like scheduler&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;communication&quot;&gt;Communication&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;communication&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polyfractal&#x2F;Turbine&quot;&gt;turbine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polyfractal&quot;&gt;Zachary Tong&lt;&#x2F;a&gt; : inter-task communication&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;streams-and-buffers&quot;&gt;Streams and Buffers&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;streams&lt;&#x2F;em&gt; ) ( &lt;em&gt;buffers&lt;&#x2F;em&gt; ) ( &lt;em&gt;data_structure&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orlp&#x2F;peekread&quot;&gt;peekreed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orlp&quot;&gt;Orson Peters&lt;&#x2F;a&gt; : peekable read streams&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rbytes&quot;&gt;bytes&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carllerche&quot;&gt;Carl Lerche&lt;&#x2F;a&gt; : working with bytes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apacharrow-rs&quot;&gt;arrow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacques-n&quot;&gt;Jacques Nadeau&lt;&#x2F;a&gt; : working with bytes from Apache&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;memory-management&quot;&gt;Memory management&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;mem&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroegbyte-slice-cast&quot;&gt;byte-slice-cast&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroege&quot;&gt;Sebastian Dr√∂ge&lt;&#x2F;a&gt; : casting to &#x2F; from byte slice&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rzerocopy&#x2F;&quot;&gt;zerocopy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshlf&quot;&gt;Joshua Liebow-Feeser&lt;&#x2F;a&gt; ( &lt;em&gt;serialization&lt;&#x2F;em&gt; ) : zero-copy parsing and serialization&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danburkermemmap-rs&quot;&gt;memmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danburkert&quot;&gt;Dan Burkert&lt;&#x2F;a&gt; : API for memory mapped IO&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wee_alloc&quot;&gt;wee_alloc&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : 1kB-size memory allocator for size-optimized builds&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;shuffling-allocator&quot;&gt;shuffling-allocator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : randomizing location in the heap&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;serialization&quot;&gt;Serialization&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;serialization&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vityafx&#x2F;unique-type-id&quot;&gt;unique_type_id_workspace&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vityafx&quot;&gt;Victor Polevoy&lt;&#x2F;a&gt; : procedural macro for generating unique ids&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rzerocopy&#x2F;&quot;&gt;zerocopy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshlf&quot;&gt;Joshua Liebow-Feeser&lt;&#x2F;a&gt; ( &lt;em&gt;mem&lt;&#x2F;em&gt; ) : zero-copy parsing and serialization&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&#x2F;restruct&quot;&gt;restruct&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : serializing and deserializing of a tuple&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bincode-org&#x2F;bincode&quot;&gt;bincode&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nmccarty&quot;&gt;Nathan McCarty&lt;&#x2F;a&gt; : a binary encoder &#x2F; decoder implementation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&quot;&gt;ron&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; ( &lt;em&gt;gdf&lt;&#x2F;em&gt; ) : readable data serialization format&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;serde-rserde&quot;&gt;serde&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : the most popular serialization framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hjson&#x2F;hjson-rust&quot;&gt;serde-hjson&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laktak&quot;&gt;Christian Zangl&lt;&#x2F;a&gt; : serde plugin to parse JSON with comments&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nanoserde&quot;&gt;nanoserde&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&quot;&gt;Fedor Logachev&lt;&#x2F;a&gt; : minimal serialization library with zero dependencies&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koutspeedy&quot;&gt;speedy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koute&quot;&gt;Koute&lt;&#x2F;a&gt; : another serialization alternative&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&#x2F;dipa&quot;&gt;dipa&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&quot;&gt;Chinedu Francis Nwafili&lt;&#x2F;a&gt; : structures delta encoding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;stringification&quot;&gt;Stringification&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;stringification&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&#x2F;parse-display&quot;&gt;parse-display&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&quot;&gt;Frozenlib&lt;&#x2F;a&gt; ( &lt;em&gt;derive&lt;&#x2F;em&gt; ) : derive macro Display and FromStr&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Peternator7&#x2F;strum&quot;&gt;strum&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Peternator7&quot;&gt;Peter Glotfelty&lt;&#x2F;a&gt; ( &lt;em&gt;adt&lt;&#x2F;em&gt; ) : enum stringification, parsing and iterating&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Alexhuszagh&#x2F;rust-lexical&quot;&gt;lexical&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Alexhuszagh&quot;&gt;Alexander Huszagh&lt;&#x2F;a&gt; ( &lt;em&gt;parser&lt;&#x2F;em&gt; ) : numeric to and from string conversion&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Alexhuszagh&#x2F;rust-lexical&#x2F;tremain&#x2F;lexical-core&quot;&gt;lexical-core&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Alexhuszagh&quot;&gt;Alexander Huszagh&lt;&#x2F;a&gt; ( &lt;em&gt;parser&lt;&#x2F;em&gt; ) : minimal implementation of lexical&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeopoldArkham&#x2F;humansize&quot;&gt;humansize&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeopoldArkham&quot;&gt;Leopold Arkham&lt;&#x2F;a&gt; : file size formatting&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&#x2F;ubyte&quot;&gt;ubyte&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&lt;&#x2F;a&gt; : byte units&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcmyernum-format&quot;&gt;num-format&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcmyers&quot;&gt;Brian Myers&lt;&#x2F;a&gt; : formatting of numbers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburtabled&quot;&gt;tabled&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburt&quot;&gt;Maxim Zhiburt&lt;&#x2F;a&gt; : textual tables formatting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;parser-generators-combinators&quot;&gt;Parser generators &#x2F; combinators&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;parser_generator&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&#x2F;chumsky&quot;&gt;chumsky&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&quot;&gt;Joshua Barretto&lt;&#x2F;a&gt; : parser combinator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Geal&#x2F;nom&quot;&gt;nom&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Geal&quot;&gt;Geoffroy Couprie&lt;&#x2F;a&gt; : parser combinator framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Marwecombine&quot;&gt;combine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Marwes&quot;&gt;Markus Westerlind&lt;&#x2F;a&gt; : parser combinators&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Marwecombine-language&quot;&gt;combine-language&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Marwes&quot;&gt;Markus Westerlind&lt;&#x2F;a&gt; : extension of combine to generate parsers of programming languages&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lalrpop&#x2F;lalrpop&quot;&gt;lalrpop&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;Niko Matsakis&lt;&#x2F;a&gt; : LR(1) parser generator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kevinmehall&#x2F;rust-peg&quot;&gt;peg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kevinmehall&quot;&gt;Kevin Mehall&lt;&#x2F;a&gt; : PEG parser generator&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;lexer-generator&quot;&gt;Lexer generator&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;lexer_generator&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&#x2F;logos&quot;&gt;logos&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&quot;&gt;Maciej Hirsz&lt;&#x2F;a&gt; : fast tokenizer, the most popular&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&#x2F;lexgen&quot;&gt;lexgen&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&quot;&gt;√ñmer Sinan Aƒüacan&lt;&#x2F;a&gt; : lexer generator, as a procedural macro&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;softdevteam&#x2F;grmtooltree&#x2F;master&#x2F;lrlex&quot;&gt;lrlex&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ptersilie&quot;&gt;Lukas Diekmann&lt;&#x2F;a&gt; : lex&#x2F;flex inspired lexer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;parser-of-a-specific-language&quot;&gt;Parser of a specific language&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;parser&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&#x2F;minimad&quot;&gt;minimad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Canop&quot;&gt;Canop&lt;&#x2F;a&gt; : markdown ( MD ) parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parcel-bundler&#x2F;parcel-css&quot;&gt;parcel_css&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;devongovett&quot;&gt;Devon Govett&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) : CSS parser, transformer, and minifier&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;rust-csv&quot;&gt;csv&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : CSV parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&#x2F;toml-rs&quot;&gt;toml&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : TOML parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ordian&#x2F;toml_edit&quot;&gt;toml_edit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ordian&quot;&gt;Andronik Ordian&lt;&#x2F;a&gt; : format-preserving TOML parser&lt;&#x2F;li&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;regex&quot;&gt;regex&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : the most popular regular expressions implementation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rusty-ecmRESS&quot;&gt;ress&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FreeMasen&quot;&gt;Robert Masen&lt;&#x2F;a&gt; : tokenizer of JS&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rusty-ecmRESSA&quot;&gt;ressa&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FreeMasen&quot;&gt;Robert Masen&lt;&#x2F;a&gt; : parser of JS&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trishumsyntect&quot;&gt;syntect&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trishume&quot;&gt;Tristan Hume&lt;&#x2F;a&gt; : syntax highlighting using Sublime text syntax definitions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&#x2F;sg&quot;&gt;sg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&quot;&gt;√ñmer Sinan Aƒüacan&lt;&#x2F;a&gt; : syntax-aware grep-like code search&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&#x2F;tree-sitter-parse&quot;&gt;tree-sitter-parse&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&quot;&gt;√ñmer Sinan Aƒüacan&lt;&#x2F;a&gt; : tree-sitter-cli that can load parsers compiled to shared libraries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;time&quot;&gt;Time&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;time&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;time-rtime&quot;&gt;time&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhpratt&quot;&gt;Jacob Pratt&lt;&#x2F;a&gt; : the most popular date and time module&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chronotopchrono&quot;&gt;chrono&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lifthrasiir&quot;&gt;Kang Seonghoon&lt;&#x2F;a&gt; : date and time module, maintained poorly&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;imp&#x2F;chrono-humanize-rs&quot;&gt;chrono-humanize&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;imp&quot;&gt;Cyril Plisko&lt;&#x2F;a&gt; : human-friendly time expressions&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;statistics&quot;&gt;Statistics&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;statistics&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-random&#x2F;getrandom&quot;&gt;getrandom&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;Diggory Hardy&lt;&#x2F;a&gt; : cross-platform get random back-end&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-random&#x2F;rand&quot;&gt;rand&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;froystig&quot;&gt;Roy Frostig&lt;&#x2F;a&gt; : random number generation front-end&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rfastrand&quot;&gt;fastrand&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smol-rs&quot;&gt;Stjepan Glavina&lt;&#x2F;a&gt; : fast random number generator&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uuid-ruuid&quot;&gt;uuid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;poiru&quot;&gt;Biru Mohanathas&lt;&#x2F;a&gt; : generate and parse UUIDs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;huxi&#x2F;rusty_ulid&quot;&gt;rusty_ulid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;huxi&quot;&gt;J√∂rn Huxhorn&lt;&#x2F;a&gt; : generate and parse ULIDs, alternative of UUIDs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;abstract-data-types&quot;&gt;Abstract Data types&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;adt&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-num&#x2F;num&quot;&gt;num&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;Josh Stone&lt;&#x2F;a&gt; : a collection of numeric types and traits&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tritoktotal_float_wrap&quot;&gt;total_float_wrap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tritoke&quot;&gt;&lt;&#x2F;a&gt; : hash and equal for floats&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;algorithms&quot;&gt;Algorithms&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;algo&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;drop-merge-sort&quot;&gt;dmsort&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&quot;&gt;Emil Ernerfeldt&lt;&#x2F;a&gt; : fast novel adaptive sorting algorithm optimized for nearly-sorted data&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;longest-increasing-subsequence&quot;&gt;longest-increasing-subsequence&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : longest increasing subsequence&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;primitive-data-structures&quot;&gt;Primitive data structures&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;primitive&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluseither&quot;&gt;either&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : enum Either with variants Left and Right is a general purpose sum type with two cases&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&#x2F;pointer-utiltree&#x2F;master&#x2F;crates&#x2F;ptr-union&quot;&gt;ptr-union&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&quot;&gt;Christopher Durham&lt;&#x2F;a&gt; : union of pointers storing the tag in alignment bits&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&#x2F;pointer-utiltree&#x2F;master&#x2F;crates&#x2F;erasable&quot;&gt;erasable&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&quot;&gt;Christopher Durham&lt;&#x2F;a&gt; : produce type-less pointers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&#x2F;pointer-utiltree&#x2F;master&#x2F;crates&#x2F;rc-box&quot;&gt;rc-box&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&quot;&gt;Christopher Durham&lt;&#x2F;a&gt; : better Rc&amp;lt; Box &amp;gt; and Arc&amp;lt; Box &amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&#x2F;pointer-utiltree&#x2F;master&#x2F;crates&#x2F;rc-borrow&quot;&gt;rc-borrow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&quot;&gt;Christopher Durham&lt;&#x2F;a&gt; : borrow Rc&#x2F;Arc without wrapping borrowed&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&#x2F;triomphe&quot;&gt;triomphe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;Manish Goregaokar&lt;&#x2F;a&gt; : FFI-focused ARC&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusscopeguard&quot;&gt;scopeguard&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : run a given closure when it goes out of scope&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&#x2F;beef&quot;&gt;beef&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&quot;&gt;Maciej Hirsz&lt;&#x2F;a&gt; : fast tokenizer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;collections&quot;&gt;Collections&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;collection&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusindexmap&quot;&gt;indexmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : hash table which preserves insertion order&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;hashbrown&quot;&gt;hashbrown&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Amanieu&quot;&gt;Amanieu d&#x27;Antras&lt;&#x2F;a&gt; : hashmap and hashset for &amp;quot;no std&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustc-hash&quot;&gt;rustc-hash&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;Niko Matsakis&lt;&#x2F;a&gt; : fast non-cryptographic hashmap and hashset&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gnzlbg&#x2F;slice_deque&quot;&gt;slice-deque&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gnzlbg&quot;&gt;gnzlbg&lt;&#x2F;a&gt; : contiguous-in-memory double-ended queue that derefs into a slice&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&#x2F;thingbuf&quot;&gt;thingbuf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&quot;&gt;Eliza Weisman&lt;&#x2F;a&gt; : in-place allocation-reusing queues&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitvecto-rbitvec&quot;&gt;bitvec&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;myrrlyn&quot;&gt;Alexander Payne&lt;&#x2F;a&gt; : bitfields&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitflagbitflags&quot;&gt;bitflags&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitflags&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : macro to generate structures which behave like bitflags&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dpbrigggrowable-bloom-filters&quot;&gt;growable-bloom-filter&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dpbriggs&quot;&gt;David Briggs&lt;&#x2F;a&gt; : growable bloom filter&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;associative-cache&quot;&gt;associative-cache&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : fixed-size, associative cache&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;intrusive_splay_tree&quot;&gt;intrusive_splay_tree&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : an intrusive, allocation-free &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Splay_tree&quot;&gt;splay tree&lt;&#x2F;a&gt; implementation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&#x2F;anymap&quot;&gt;anymap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;Chris Morgan&lt;&#x2F;a&gt; : wrapper around HashMap&amp;lt; TypeId, Box&amp;lt; dyn Any &amp;gt; &amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;fst&quot;&gt;fst&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : trie-like to represent large sets and maps&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&#x2F;evmap&quot;&gt;evmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;Jon Gjengset&lt;&#x2F;a&gt; ( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) : lock-free, eventually consistent, concurrent multi-value map&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xacrimon&#x2F;dashmap&quot;&gt;dashmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xacrimon&quot;&gt;Acrimon Joel&lt;&#x2F;a&gt; ( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) : concurrent HashMap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&#x2F;sharded-slab&quot;&gt;sharded-slab&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&quot;&gt;Eliza Weisman&lt;&#x2F;a&gt; ( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) : lock-free concurrent slab&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- - [rust-fnv](https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-fnv) by [Simon Sapin](https:&#x2F;&#x2F;github.com&#x2F;SimonSapin) : hash map which is more efficient for smaller hash keys. --&gt;
&lt;h2 id=&quot;character-encoding&quot;&gt;Character encoding&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;string&lt;&#x2F;em&gt; ) ( &lt;em&gt;character_encoding&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&#x2F;deunicode&quot;&gt;deunicode&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;Kornel&lt;&#x2F;a&gt; : transliterates Unicode strings into ASCII&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&#x2F;widestring-rs&quot;&gt;widestring&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&quot;&gt;Kathryn Long&lt;&#x2F;a&gt; : a wide string Rust library for converting to and from wide Unicode strings&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unicode-runicode-width&quot;&gt;unicode-width&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kwantam&quot;&gt;Riad S. Wahby&lt;&#x2F;a&gt; : displayed width&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unicode-runicode-segmentation&quot;&gt;unicode-segmentation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kwantam&quot;&gt;Riad S. Wahby&lt;&#x2F;a&gt; : iterate graphemes of unicode string&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;string-and-slice-data-structures-and-algorithms&quot;&gt;String and slice data structures and algorithms&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;string&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;febeling&#x2F;edit-distance&quot;&gt;edit-distance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;febeling&quot;&gt;Florian Ebeling&lt;&#x2F;a&gt; : Levenshtein distance&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&#x2F;similar&quot;&gt;similar&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitsuhiko&quot;&gt;Armin Ronacher&lt;&#x2F;a&gt; : determining difference between string&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blustwoway&quot;&gt;twoway&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : twoway substring search&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;memchr&quot;&gt;memchr&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : string search routines&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;aho-corasick&quot;&gt;aho-corasick&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : finding occurrences of many patterns at once&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;suffix&quot;&gt;suffix&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : finding several occurrences of the same pattern in a long text&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;globset&quot;&gt;globset&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; ( &lt;em&gt;fs&lt;&#x2F;em&gt; ) : glob matching&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;withoutboatheck&quot;&gt;heck&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;withoutboats&quot;&gt;Saoirse Shipwreckt&lt;&#x2F;a&gt; : case conversion&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rutrum&#x2F;convert-case&quot;&gt;convert-case&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rutrum&quot;&gt;Dave Purdum&lt;&#x2F;a&gt; : case conversion&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&#x2F;pointer-utiltree&#x2F;master&#x2F;crates&#x2F;slice-dst&quot;&gt;slice-dst&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CAD97&quot;&gt;Christopher Durham&lt;&#x2F;a&gt; : slice-based DST allocation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;stack-based-data-structures&quot;&gt;Stack-based data structures&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;stack_based&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;inlinable_string&quot;&gt;inlinable_string&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; ( &lt;em&gt;string&lt;&#x2F;em&gt; ) : stack-based string if small, otherwise heap-based, also defines String interface&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bodil&#x2F;smartstring&quot;&gt;smartstring&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bodil&quot;&gt;Bodil Stokke&lt;&#x2F;a&gt; ( &lt;em&gt;string&lt;&#x2F;em&gt; ) : stack-based string if small, otherwise heap-based&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cobalt-org&#x2F;kstring&quot;&gt;kstring&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;epage&quot;&gt;Ed Page&lt;&#x2F;a&gt; : stack-based string if small, otherwise heap-based, optimal as a key for hashmap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusarrayvec&quot;&gt;arrayvec&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : stack-based vector and string&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-smallvec&quot;&gt;smallvec&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;Simon Sapin&lt;&#x2F;a&gt; : stack-based vector&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notgull&#x2F;tinymap&quot;&gt;tinymap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notgull&quot;&gt;John&lt;&#x2F;a&gt; : stack-based hashmap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notgull&#x2F;storagevec-rs&quot;&gt;storagevec&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notgull&quot;&gt;John&lt;&#x2F;a&gt; : feature to chose stack-based containers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;self-referential-structures&quot;&gt;Self referential structures&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;self_ref&lt;&#x2F;em&gt; ) ( &lt;em&gt;ownership_semantics&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kimundi&#x2F;owning-ref-rs&quot;&gt;owning_ref&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kimundi&quot;&gt;Marvin L√∂bel&lt;&#x2F;a&gt; : references that carry their owner with them&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshua-maroouroboros&quot;&gt;ouroboros&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshua-maros&quot;&gt;Joshua Maros&lt;&#x2F;a&gt; : self-referential struct generation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ownership-semantic&quot;&gt;Ownership semantic&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;ownership_semantics&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&#x2F;slabmap&quot;&gt;slabmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frozenlib&quot;&gt;Frozenlib&lt;&#x2F;a&gt; : hashMap-like collection with implicit key&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rslab&quot;&gt;slab&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carllerche&quot;&gt;Carl Lerche&lt;&#x2F;a&gt; : hashMap-like collection with implicit key&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusindexing&quot;&gt;indexing&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : solving indexing problem by associating lifetime with intervals&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orlp&#x2F;slotmap&quot;&gt;slotmap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orlp&quot;&gt;Orson Peters&lt;&#x2F;a&gt; : a hashmap with implicit key&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&#x2F;rust-typed-arena&quot;&gt;typed-arena&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;Simon Sapin&lt;&#x2F;a&gt; : homogenous allocator operating references without the ability to deallocate an individual element&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;id-arena&quot;&gt;id-arena&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : homogenous allocator operating ids without the ability to deallocate an individual element&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;generational-arena&quot;&gt;generational-arena&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : homogenous allocator operating ids with the ability to deallocate an individual element&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;bumpalo&quot;&gt;bumpalo&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : heterogeneous allocator operating ids without the ability to deallocate an individual element&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;multidimensional-data-structures-and-algorithms&quot;&gt;Multidimensional data structures and algorithms&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;multidimensional&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;svenstaro&#x2F;bvh&quot;&gt;bvh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;svenstaro&quot;&gt;Sven-Hendrik Haase&lt;&#x2F;a&gt; : fast BVH using SAH&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;graphs&quot;&gt;Graphs&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;graphs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petgraph&#x2F;petgraph&quot;&gt;petgraph&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : graph data structure and algorithms&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hashing&quot;&gt;Hashing&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;hashing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tkaitchuck&#x2F;aHash&quot;&gt;ahash&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tkaitchuck&quot;&gt;Tom Kaitchuck&lt;&#x2F;a&gt; : fast non-cryptographic hashing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DoumanAsh&#x2F;xxhash-rust&quot;&gt;xxhash-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DoumanAsh&quot;&gt;Douman&lt;&#x2F;a&gt; : xxhash algorithm - one of the fastest non-cryptographic hashing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&#x2F;twox-hash&quot;&gt;twox-hash&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;Jake Goulding&lt;&#x2F;a&gt; : xxhash algorithm - one of the fastest non-cryptographic hashing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.redox-os.org&#x2F;redox-oseahash&quot;&gt;seahash&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Tommoa&quot;&gt;Tom Almeida&lt;&#x2F;a&gt; : one of the fastest non-cryptographic hashing algorithm&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&#x2F;by_address&quot;&gt;by_address&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;Matt Brubeck&lt;&#x2F;a&gt; ( &lt;em&gt;adt&lt;&#x2F;em&gt; ) : comparison by pointer address&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cryptography&quot;&gt;Cryptography&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;cryptography&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facebookresearch&#x2F;Cupcake&quot;&gt;Cupcake&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;haochenuw&quot;&gt;Hao Chen&lt;&#x2F;a&gt; : lattice-based additive homomorphic encryption&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chritchenelgamal-curve25519&quot;&gt;elgamal-curve25519&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chritchens&quot;&gt;Christian Nyumbayire&lt;&#x2F;a&gt; : ElGamal homomorphic encryption on Curve25519&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcmyerargonautica&quot;&gt;argonautica&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcmyers&quot;&gt;Brian Myers&lt;&#x2F;a&gt; : password hashing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sru-systemrust-argon2&quot;&gt;rust-argon2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrijkeboer&quot;&gt;Martijn Rijkeboer&lt;&#x2F;a&gt; :  password hashing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;compression&quot;&gt;Compression&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;compression&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&#x2F;yazi&quot;&gt;yazi&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&quot;&gt;Chad Brokaw&lt;&#x2F;a&gt; : deflatzlib compression&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;flate2-rs&quot;&gt;flate2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : deflate, gzip, and zlib bindings&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;rust-snappy&quot;&gt;snap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : high speeds and reasonable compression&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&#x2F;smush-rs&quot;&gt;smush&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&quot;&gt;Graham Wihlidal&lt;&#x2F;a&gt; : adapter of variety of compression codecs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;encoding-decoding&quot;&gt;Encoding &#x2F; decoding&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;encoding&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-url&#x2F;tremaster&#x2F;percent_encoding&quot;&gt;percent-encoding&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;Simon Sapin&lt;&#x2F;a&gt; : do &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Percent-encoding&quot;&gt;URL percent encoding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-url&quot;&gt;url&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;Simon Sapin&lt;&#x2F;a&gt; : URI parsing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KokaKiwi&#x2F;rust-hex&quot;&gt;hex&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KokaKiwi&quot;&gt;KokaKiwi&lt;&#x2F;a&gt; : hexadecimal encoding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;general-data-format&quot;&gt;General data format&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;gdf&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frol&#x2F;flatc-rust&quot;&gt;flatc-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frol&#x2F;flatc-rust&quot;&gt;Vlad Frolov&lt;&#x2F;a&gt; : FlatBuffers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&quot;&gt;ron&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; ( &lt;em&gt;serialization&lt;&#x2F;em&gt; ) : readable data serialization format&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;3Hren&#x2F;msgpack-rust&quot;&gt;rmp&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;3Hren&quot;&gt;Evgeny Safronov&lt;&#x2F;a&gt; : MessagePack&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;twittner&#x2F;minicbor&quot;&gt;minicbor&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;twittner&quot;&gt;Toralf Wittner&lt;&#x2F;a&gt; : CBOR&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dflemstr&#x2F;rq&quot;&gt;record-query&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dflemstr&quot;&gt;David Flemstr√∂m&lt;&#x2F;a&gt; : transform from one GDF to another one&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- - [json](https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&#x2F;json-rust) by [Maciej Hirsz](https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz) : inlined JSON --&gt;
&lt;h2 id=&quot;image-reading-writing&quot;&gt;Image reading &#x2F; writing&lt;&#x2F;h2&gt;
&lt;p&gt;( _&lt;em&gt;image&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cykooz&#x2F;libheif-rs&quot;&gt;libheif-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cykooz&quot;&gt;Kirill Kuzminykh&lt;&#x2F;a&gt; : heif&#x2F;heic files reading&#x2F;writing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&#x2F;lodepng-rust&quot;&gt;lodepng&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;Kornel&lt;&#x2F;a&gt; : PNG image reader&#x2F;writer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vadixidav&#x2F;exifsd&quot;&gt;exifsd&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vadixidav&quot;&gt;Geordon Worley&lt;&#x2F;a&gt; : exif serialization and deserialization&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;image-processing&quot;&gt;Image processing&lt;&#x2F;h2&gt;
&lt;p&gt;( _&lt;em&gt;image_processing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cykooz&#x2F;fast_image_resize&quot;&gt;fast_image_resize&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cykooz&quot;&gt;Kirill Kuzminykh&lt;&#x2F;a&gt; : SIMD image resizing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ImageOptim&#x2F;libimagequant&quot;&gt;imagequant&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;Kornel&lt;&#x2F;a&gt; : palette quantization library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&#x2F;dssim&quot;&gt;dssim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;Kornel&lt;&#x2F;a&gt; : image similarity comparison simulating human perception&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Razaekel&#x2F;noise-rs&quot;&gt;noise&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Razaekel&quot;&gt;Nick Whitney&lt;&#x2F;a&gt; : procedural noise generation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rimageproc&quot;&gt;imageproc&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&quot;&gt;image-rs&lt;&#x2F;a&gt; : library for images processing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Joylei&#x2F;anim-rs&quot;&gt;anim-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Joylei&quot;&gt;Joylei&lt;&#x2F;a&gt; : animation library&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;file-system&quot;&gt;File system&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;fs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dirs-dev&#x2F;directories-rs&quot;&gt;directories&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;soc&quot;&gt;Simon Ochsenreither&lt;&#x2F;a&gt; : OS&#x27;s paths&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danburkerfs2-rs&quot;&gt;fs2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danburkert&quot;&gt;Dan Burkert&lt;&#x2F;a&gt; : extra system fs routines&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;walkdir&quot;&gt;walkdir&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : walking directories recursively&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;remove_dir_all&quot;&gt;remove_dir_all&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&quot;&gt;Erin P&lt;&#x2F;a&gt; : directory removal&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitflagfiletime&quot;&gt;filetime&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitflags&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : file timestamps reading &#x2F; writing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;is_executable&quot;&gt;is_executable&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;Nick Fitzgerald&lt;&#x2F;a&gt; : is an executable&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;same-file&quot;&gt;same-file&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : two files or directories are the same&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;globset&quot;&gt;globset&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; ( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;string&lt;&#x2F;em&gt; ) : glob matching&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;harryfei&#x2F;which-rs&quot;&gt;which&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;harryfei&quot;&gt;Harry Fei&lt;&#x2F;a&gt; : equivalent of Unix command &amp;quot;which&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;manuel-woelker&#x2F;rust-vfs&quot;&gt;vfs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;manuel-woelker&quot;&gt;Manuel Woelker&lt;&#x2F;a&gt; : file system adapter&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- - [home](https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;home) by [Brian Anderson](https:&#x2F;&#x2F;github.com&#x2F;brson) : home dir --&gt;
&lt;!-- - [tempfile](https:&#x2F;&#x2F;github.com&#x2F;Stebalien&#x2F;tempfile) by [Steven Allen](https:&#x2F;&#x2F;github.com&#x2F;Stebalien) : temporary file --&gt;
&lt;h2 id=&quot;operation-systems-userland&quot;&gt;Operation Systems - userland&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;os&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;retep998&#x2F;winapi-rs&quot;&gt;winapi&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;retep998&quot;&gt;Peter Atashian&lt;&#x2F;a&gt; : bindings to Windows API&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;retep998&#x2F;wio-rs&quot;&gt;wio&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;retep998&quot;&gt;Peter Atashian&lt;&#x2F;a&gt; : extra bindings to Windows API&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;winapi-util&quot;&gt;winapi-util&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;Andrew Gallant&lt;&#x2F;a&gt; : middleware above&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spacejam&#x2F;rio&quot;&gt;rio&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spacejam&quot;&gt;Tyler Neely&lt;&#x2F;a&gt; : io_uring&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trishumtelefork&quot;&gt;telefork&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trishume&quot;&gt;Tristan Hume&lt;&#x2F;a&gt; : remote fork()&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburexpectrl&quot;&gt;expectrl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zhiburt&quot;&gt;Maxim Zhiburt&lt;&#x2F;a&gt; ( &lt;em&gt;ui&lt;&#x2F;em&gt; ) ( &lt;em&gt;tui&lt;&#x2F;em&gt; ) ( &lt;em&gt;testing&lt;&#x2F;em&gt; ) : controlling input&#x2F;output of interactive programs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nix-rusnix&quot;&gt;nix&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carllerche&quot;&gt;Carl Lerche&lt;&#x2F;a&gt; : nix APIs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech&#x2F;systemstat&quot;&gt;systemstat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unrelentingtech&quot;&gt;Greg V&lt;&#x2F;a&gt; : system information&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;operation-systems-kernel&quot;&gt;Operation Systems - kernel&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;os&lt;&#x2F;em&gt; ) ( &lt;em&gt;kernel&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Andy-Python-Programmer&#x2F;ion&quot;&gt;Ion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Andy-Python-Programmer&quot;&gt;Anhad Singh &lt;&#x2F;a&gt; : x86_64 UEFI bootloader&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Andy-Python-Programmer&#x2F;aero&quot;&gt;Aero&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Andy-Python-Programmer&quot;&gt;Anhad Singh &lt;&#x2F;a&gt; : unix-like operating system&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&#x2F;mycelium&quot;&gt;mycelium&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&quot;&gt;Eliza Weisman&lt;&#x2F;a&gt; : operating system&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hermitcorrusty-hermit&quot;&gt;hermit-sys&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stlankes&quot;&gt;Stefan Lankes&lt;&#x2F;a&gt; : lightweight unikernel&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;asm&quot;&gt;Asm&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;asm&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m4b&#x2F;faerie&quot;&gt;faerie&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m4b&quot;&gt;m4b&lt;&#x2F;a&gt; : ELF and Mach-o object file writer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m4b&#x2F;goblin&quot;&gt;goblin&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m4b&quot;&gt;m4b&lt;&#x2F;a&gt; : binary parsing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;cargo-bloat&quot;&gt;cargo-bloat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&quot;&gt;Yevhenii Reizner&lt;&#x2F;a&gt; : utility to profile code size&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;cargo-binutils&quot;&gt;cargo-binutils&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; : LLVM utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gz&#x2F;rust-elfloader&quot;&gt;elfloader&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gz&quot;&gt;Gerd Zellweger&lt;&#x2F;a&gt; : x86 CPUID instruction&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&#x2F;symbol&quot;&gt;symbol&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&quot;&gt;Caleb Zulawski&lt;&#x2F;a&gt; : ELF and Mach-O symbols manipulation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;hardware&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gz&#x2F;rust-cpuid&quot;&gt;cpuid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gz&quot;&gt;Gerd Zellweger&lt;&#x2F;a&gt; : x86 CPUID instruction&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&#x2F;cupid&quot;&gt;cupid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;Jake Goulding&lt;&#x2F;a&gt; : x86 CPUID instruction&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;num_cpus&quot;&gt;num_cpus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&quot;&gt;Sean McArthur&lt;&#x2F;a&gt; : number of CPUs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&#x2F;generic-simd&quot;&gt;generic-simd&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&quot;&gt;Caleb Zulawski&lt;&#x2F;a&gt; : SIMD instructions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&#x2F;multiversion&quot;&gt;multiversion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&quot;&gt;Caleb Zulawski&lt;&#x2F;a&gt; : tool to write multiversioned architecture-specific implementations of functions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustyhordvergen&quot;&gt;vergen&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jasonozias&quot;&gt;Jason Ozias&lt;&#x2F;a&gt; : ( &lt;em&gt;hardware&lt;&#x2F;em&gt; ) ( &lt;em&gt;compile_time&lt;&#x2F;em&gt; ) compile-time constants about process of compilation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;embedded&quot;&gt;Embedded&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;embed&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-embedded&#x2F;embedded-hal&quot;&gt;embedded-hal&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;Jorge Aparicio&lt;&#x2F;a&gt; : hardware abstraction layer (HAL) for embedded systems&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rede97&#x2F;serial_enumerator&quot;&gt;serial_enumerator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rede97&quot;&gt;eebear&lt;&#x2F;a&gt; : serial port enumreator&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;foreign&quot;&gt;Foreign&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;foreign&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&#x2F;foreign-types&quot;&gt;foreign_types&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&quot;&gt;Steven Fackler&lt;&#x2F;a&gt; : wrappers over C APIs.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystor&#x2F;rust-cpp&quot;&gt;cpp&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystor&quot;&gt;Nika Layzell&lt;&#x2F;a&gt; : embed C++ inside rust code&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;logging&quot;&gt;Logging&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;logger&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;log&quot;&gt;log&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;Alex Crichton&lt;&#x2F;a&gt; : lightweight logging&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estk&#x2F;log4rs&quot;&gt;log4rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estk&quot;&gt;estk&lt;&#x2F;a&gt; : configurable logging&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Drakulix&#x2F;simplelog.rs&quot;&gt;simplelog&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Drakulix&quot;&gt;Victoria Brekenfeld&lt;&#x2F;a&gt; : simple logging&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rtracing&quot;&gt;tracing&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hawkw&quot;&gt;Eliza Weisman&lt;&#x2F;a&gt; :&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elefant-dev&#x2F;fregate-rs&quot;&gt;fregate&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;elefant-dev&quot;&gt;Petr Makagon&lt;&#x2F;a&gt; : metrics, logging, environment all-in-one&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;config&quot;&gt;Config&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;config&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mehcodconfig-rs&quot;&gt;config&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mehcode&quot;&gt;Ryan Leckey&lt;&#x2F;a&gt; : generic config manager&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;allan2&#x2F;dotenvy&#x2F;&quot;&gt;dotenvy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;allan2&quot;&gt;Allan&lt;&#x2F;a&gt; : environment variables from a .env file&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;diagnostics-tools&quot;&gt;Diagnostics tools&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;daignostics&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colin-kiegel&#x2F;rust-pretty-assertions&quot;&gt;pretty_assertions&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colin-kiegel&quot;&gt;Colin Kiegel&lt;&#x2F;a&gt; : pretty assert_eq&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;mobile&quot;&gt;Mobile&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;mobile&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BrainiumLLC&#x2F;cargo-mobile&quot;&gt;cargo-mobile&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtak-&quot;&gt;mtak-&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) : utility to run rust on mobile&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dodorarcrossbow&quot;&gt;crossbow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;enfipy&quot;&gt;David Ackerman&lt;&#x2F;a&gt; : cross-platform rust toolkit for games&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BrainiumLLC&#x2F;mobile-entry-point&quot;&gt;mobile-entry-point&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;francesca64&quot;&gt;Francesca Lovebloom&lt;&#x2F;a&gt; : Wraps a function to make it the entry-point for an mobile app&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;android&quot;&gt;Android&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;android&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;android-ndk-rs&quot;&gt;android-ndk-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mb64&quot;&gt;Mark Barbone&lt;&#x2F;a&gt; : libraries and tools for Rust programming on Android targets&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;android-ndk-rtree&#x2F;master&#x2F;ndk-glue&quot;&gt;ndk-glue&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dvc94ch&quot;&gt;David Craven&lt;&#x2F;a&gt; : interoperability library for a native Rust application with the Android framework&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;android-ndk-rtree&#x2F;master&#x2F;ndk-sys&quot;&gt;ndk-sys&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dvc94ch&quot;&gt;David Craven&lt;&#x2F;a&gt; ( &lt;em&gt;bindings&lt;&#x2F;em&gt; ) : raw FFI bindings to the NDK&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nercury&#x2F;android_logger-rs&quot;&gt;android_logger&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nercury&quot;&gt;Nerijus Arlauskas&lt;&#x2F;a&gt; ( &lt;em&gt;logger&lt;&#x2F;em&gt; ) : send Rust logs to Logcat&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;android-ndk-rtree&#x2F;master&#x2F;cargo-apk&quot;&gt;cargo-apk&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dvc94ch&quot;&gt;David Craven&lt;&#x2F;a&gt; ( &lt;em&gt;build&lt;&#x2F;em&gt; ) : tool for creating Android packages&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ios&quot;&gt;iOS&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;ios&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wojteklu&#x2F;rust-to-ios&quot;&gt;rust-to-ios&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wojteklu&quot;&gt;Wojtek Lukaszuk&lt;&#x2F;a&gt; ( &lt;em&gt;example&lt;&#x2F;em&gt; ) : Example project for building a library for iOS.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yonaskolb&#x2F;XcodeGen&quot;&gt;xcodegen&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yonaskolb&quot;&gt;Yonas Kolb&lt;&#x2F;a&gt; : utility to generates your Xcode project&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TimNN&#x2F;cargo-lipo&quot;&gt;cargo-lipo&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TimNN&quot;&gt;Tim Neumann&lt;&#x2F;a&gt; : utility to automatically creates a universal library for use with iOS application&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;templating&quot;&gt;Templating&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;templating&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunng87&#x2F;handlebars-rust&quot;&gt;handlebars-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunng87&quot;&gt;Ning Sun&lt;&#x2F;a&gt; : Handlebars templating language implemented in Rust and for Rust&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cargo-generatcargo-generate&quot;&gt;cargo-generate&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ashleygwilliams&quot;&gt;ashley williams&lt;&#x2F;a&gt; : utility to instantiate a template ( &lt;em&gt;cargo&lt;&#x2F;em&gt; ) ( &lt;em&gt;build&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&#x2F;ramhorns&quot;&gt;ramhorns&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maciejhirsz&quot;&gt;Maciej Hirsz&lt;&#x2F;a&gt; : Mustache template engine&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;utilities-for-development&quot;&gt;Utilities for development&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;development&lt;&#x2F;em&gt; )( &lt;em&gt;utility&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust-clippy&quot;&gt;cargo-clippy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;Manishearth&lt;&#x2F;a&gt; : A collection of lints to catch common mistakes and improve your Rust code&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RustSec&#x2F;rustsec&#x2F;tremain&#x2F;cargo-audit&quot;&gt;cargo-audit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tarcieri&quot;&gt;Tony Arcieri&lt;&#x2F;a&gt; : Audit Cargo.lock files for crates with security vulnerabilities reported to the RustSec Advisory Database&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&#x2F;cargo-udeps&quot;&gt;cargo-udeps&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;est31&lt;&#x2F;a&gt; : Find unused dependencies in Cargo.toml&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;watchexec&#x2F;cargo-watch&quot;&gt;cargo-watch&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;passcod&quot;&gt;F√©lix Saparelli&lt;&#x2F;a&gt; : Utility to watch over your project&#x27;s source for changes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cargo-checkmatcargo-checkmate&quot;&gt;cargo-checkmate&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nathan-at-least&quot;&gt;Nathan Wilcox&lt;&#x2F;a&gt; : Perform a series of useful checks out of the box.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudiocargo-about&quot;&gt;cargo-about&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Jake-Shadle&quot;&gt;Jake Shadle&lt;&#x2F;a&gt; : Cargo plugin for generating a license listing for all dependencies of a crate&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-cargo-hack&quot;&gt;cargo-hack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;taiki-e&quot;&gt;Taiki Endo&lt;&#x2F;a&gt; : Cargo subcommand to provide various options useful for testing and continuous integration&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kbknapp&#x2F;cargo-outdated&quot;&gt;cargo-outdated&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kbknapp&quot;&gt;Kevin K.&lt;&#x2F;a&gt; : A cargo subcommand for displaying when Rust dependencies are out of date&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;miri&quot;&gt;cargo-miri&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;solson&quot;&gt;Scott Olson&lt;&#x2F;a&gt; : An experimental interpreter for Rust. Can be used to detect certain classes of undefined behavior&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;cargo-expand&quot;&gt;cargo-expand&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : Extension for cargo to expand macros&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&#x2F;cargo-llvm-lines&quot;&gt;cargo-llvm-lines&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dtolnay&quot;&gt;David Tolnay&lt;&#x2F;a&gt; : Count the number of lines of LLVM IR across all instantiations of a generic function&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- qqq : add tag::utility for each utility --&gt;
&lt;!-- qqq : sort tags --&gt;
&lt;!-- qqq : emoji instead of tags? --&gt;
&lt;!-- qqq : replace rust-windowing by a person --&gt;
&lt;!-- qqq : replace orgs by persons, add missing authors --&gt;
&lt;!-- qqq : consider replacing by emojis https:&#x2F;&#x2F;github.com&#x2F;ikatyang&#x2F;emoji-cheat-sheeblob&#x2F;master&#x2F;README.md --&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;:earth_africa: - the most popular module in its category&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;error&lt;&#x2F;em&gt; ) - errors handling&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;macro&lt;&#x2F;em&gt; ) - writing macros&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;meta&lt;&#x2F;em&gt; ) - meta programming : reflection, introspection and such things&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;decorator&lt;&#x2F;em&gt; ) - decorators for nicer code&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;derive&lt;&#x2F;em&gt; ) - procedural derive macroses&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;compiler&lt;&#x2F;em&gt; ) - compilers and static analyzers&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;compile_time&lt;&#x2F;em&gt; ) - non run-time&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;global&lt;&#x2F;em&gt; ) - global variable&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;njs&lt;&#x2F;em&gt; ) - NodeJs related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;ui&lt;&#x2F;em&gt; ) - user interface&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;gui&lt;&#x2F;em&gt; ) - graphical user interface&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;tui&lt;&#x2F;em&gt; ) - textual user interface&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cui&lt;&#x2F;em&gt; ) - command user interface&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cui_parsing&lt;&#x2F;em&gt; ) - tools to parse input of command user interface ( CUI )&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;terminal&lt;&#x2F;em&gt; ) - terminal, textual output&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cloud_api&lt;&#x2F;em&gt; ) - remote APIs, mostly REST&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cross_compile&lt;&#x2F;em&gt; ) - build from one platform to another one&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;build&lt;&#x2F;em&gt; ) - toolchains to build your project&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;perf_benchmark&lt;&#x2F;em&gt; ) - performance benchmarking&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;wasm&lt;&#x2F;em&gt; ) - WebAssembly-related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;windowing&lt;&#x2F;em&gt; ) - windows creating, manipulating OS GUI&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;dsa&lt;&#x2F;em&gt; ) - data streams aggregation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;html&lt;&#x2F;em&gt; ) - HTML generating &#x2F; parsing &#x2F; transformation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;dom&lt;&#x2F;em&gt; ) - web DOM&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;web_frontend&lt;&#x2F;em&gt; ) - web frontend&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;web_backend&lt;&#x2F;em&gt; ) - web backend&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;network&lt;&#x2F;em&gt; ) - network&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;db&lt;&#x2F;em&gt; ) - database-related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;data_science&lt;&#x2F;em&gt; ) - data science, data mining, data minding, machine learning&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;functional&lt;&#x2F;em&gt; ) - functional programming&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;virtualisation&lt;&#x2F;em&gt; ) - virtualisation-related, docker-related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;concurrency&lt;&#x2F;em&gt; ) - concurrency programming&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;async&lt;&#x2F;em&gt; ) - asynchronous programming&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;async_runtime&lt;&#x2F;em&gt; ) - asynchronous runtimes and executors&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;persistence&lt;&#x2F;em&gt; ) - persistence and delayed execution&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;communication&lt;&#x2F;em&gt; ) - either inter-process or inter-thread communication&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;streams&lt;&#x2F;em&gt; ) - read&#x2F;write streams&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;buffers&lt;&#x2F;em&gt; ) - buffers for memory management&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;mem&lt;&#x2F;em&gt; ) - memory management&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;serialization&lt;&#x2F;em&gt; ) - serialization &#x2F; deserialization&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;stringification&lt;&#x2F;em&gt; ) - converting to &#x2F; from a string&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;parser_generator&lt;&#x2F;em&gt; ) - parser generators &#x2F; combinators&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;lexer_generator&lt;&#x2F;em&gt; ) - lexer generator&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;parser&lt;&#x2F;em&gt; ) - parser of a specific language&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;time&lt;&#x2F;em&gt; ) - time&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;statistics&lt;&#x2F;em&gt; ) - random generators, distributions and statistics-related things&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;character_encoding&lt;&#x2F;em&gt; ) - character encoding&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;adt&lt;&#x2F;em&gt; ) - abstract data types&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;algo&lt;&#x2F;em&gt; ) - algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) - data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;primitive&lt;&#x2F;em&gt; ) - primitives&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;collection&lt;&#x2F;em&gt; ) - data structures which are collections&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;string&lt;&#x2F;em&gt; ) - either string or bytes slice based data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;stack_based&lt;&#x2F;em&gt; ) - stack-based data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;graphs&lt;&#x2F;em&gt; ) - graphs data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;hashing&lt;&#x2F;em&gt; ) - hashing algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cryptography&lt;&#x2F;em&gt; ) - cryptographic&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;compression&lt;&#x2F;em&gt; ) - compression, archiving&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;encoding&lt;&#x2F;em&gt; ) - encoding &#x2F; decoding&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;gdf&lt;&#x2F;em&gt; ) - general data format, genera-purpose formats to exchange data&lt;&#x2F;li&gt;
&lt;li&gt;( _&lt;em&gt;image&lt;&#x2F;em&gt; ) - reading &#x2F; writing &#x2F; manipulating various image formats&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;fs&lt;&#x2F;em&gt; ) - file system related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;os&lt;&#x2F;em&gt; ) - operation systems, bootloaders and components of such, OS APIs&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;kernel&lt;&#x2F;em&gt; ) - kernel of operation system&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;cargo&lt;&#x2F;em&gt; ) - extension of cargo&lt;&#x2F;li&gt;
&lt;li&gt;:movie_camera: - video-processing, capturing&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;asm&lt;&#x2F;em&gt; ) - machine code, byte code, interpreters, assembler&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;hardware&lt;&#x2F;em&gt; ) - reading &#x2F; writing hardware&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;embed&lt;&#x2F;em&gt; ) - embedded&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;foreign&lt;&#x2F;em&gt; ) - foreign functions, C &#x2F; C++ binding,  foreign function interface ( FFI )&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;self_ref&lt;&#x2F;em&gt; ) - self referential structures&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;ownership_semantics&lt;&#x2F;em&gt; ) - solutions of problems of owning&#x2F;borrowing&#x2F;lifetimes self referring&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;multidimensional&lt;&#x2F;em&gt; ) - multidimensional data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;bindings&lt;&#x2F;em&gt; ) - bindings to foreign library or service&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;logger&lt;&#x2F;em&gt; ) - tools for printing information&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;config&lt;&#x2F;em&gt; ) - config managing&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;daignostics&lt;&#x2F;em&gt; ) - tools for diagnostics&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;mobile&lt;&#x2F;em&gt; ) - tool or lib related to running rust code on mobile&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;android&lt;&#x2F;em&gt; ) - tools for running rust code on Android&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;ios&lt;&#x2F;em&gt; ) - tools for running rust code on iOS&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;testing&lt;&#x2F;em&gt; ) - for writing tests&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;utility&lt;&#x2F;em&gt; ) - utility to run in terminal&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;example&lt;&#x2F;em&gt; ) - example project&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;templating&lt;&#x2F;em&gt; ) - tools to generate text using template&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;idea&lt;&#x2F;em&gt; ) - it is rather proof of concept than production-ready implementation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;development&lt;&#x2F;em&gt; ) - helps the developer to develop&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/toolbox-multimedia/</link>
            <guid>https://example.com/blog/posts/toolbox-multimedia/</guid>
            <description>&lt;h1 id=&quot;video-game-multimedia-developer-toolbox&quot;&gt;:video_game: Multimedia Developer Toolbox&lt;&#x2F;h1&gt;
&lt;p&gt;Awesome collection of multimedia crates: GameDev, Graphics, Video, Audio, Math, DSP. It is curated by us.&lt;&#x2F;p&gt;
&lt;p&gt;You might also be interested in other tooboxes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;toolbox-multimedia&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;!-- - []() by []() : --&gt;
&lt;h2 id=&quot;renderer&quot;&gt;Renderer&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;renderer&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rwgpu&quot;&gt;WebGPU&lt;&#x2F;a&gt; : State of the art API for rendering&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-skirust-skia&quot;&gt;skia-bindings&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Brooooooklyn&quot;&gt;Long Yinan&lt;&#x2F;a&gt; : binding of skia&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;glow&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&quot;&gt;Josh Groves&lt;&#x2F;a&gt; : GL on Whatever&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&quot;&gt;Rust Windowing&lt;&#x2F;a&gt; : OpenGL context&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&#x2F;gl-rs&quot;&gt;gl-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&quot;&gt;Brendan Zabarauskas&lt;&#x2F;a&gt; : OpenGL function pointer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratelimelight&quot;&gt;limelight&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulgb&quot;&gt;Paul Butler&lt;&#x2F;a&gt; : WebGL2 wrapper with a renderer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;rend3&quot;&gt;rend3&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&quot;&gt;BVE-Reborn Train Simulator&lt;&#x2F;a&gt; : easy to use, customizable, efficient 3D renderer library built on wgpu&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;rendering-middleware&quot;&gt;Rendering Middleware&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;renderer&lt;&#x2F;em&gt; ) ( &lt;em&gt;middleware&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;three-d&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&quot;&gt;Asger Nyman Christiansen&lt;&#x2F;a&gt; : another rendering middleware renderer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;Dimitri Sabadie&lt;&#x2F;a&gt; : another rendering middleware renderer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&quot;&gt;Fedor Logachev&lt;&#x2F;a&gt; : minimal cross-platform renderer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozekiss3d&quot;&gt;kiss3d&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&quot;&gt;S√©bastien Crozet&lt;&#x2F;a&gt; : stupid 3d renderer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasytpixels&quot;&gt;pixels&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&quot;&gt;Jay Oster&lt;&#x2F;a&gt; : tiny hardware-accelerated pixel frame buffer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuantumBadger&#x2F;Speedy2D&quot;&gt;speedy2d&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuantumBadger&quot;&gt;QuantumBadger&lt;&#x2F;a&gt; : hardware-accelerated renderer with easy to use API&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasytpixels&quot;&gt;pixels&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&quot;&gt;Jay Oster&lt;&#x2F;a&gt; : small hardware-accelerated pixel frame buffer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drifting-in-spaclimelight&quot;&gt;limelight&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulgb&quot;&gt;Paul Butler&lt;&#x2F;a&gt; : WebGL2 wrapper&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;game-engines&quot;&gt;Game Engines&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;engine&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyenginbevy&quot;&gt;Bevy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cart&quot;&gt;Carter Anderson&lt;&#x2F;a&gt; ( &lt;em&gt;bevy&lt;&#x2F;em&gt; ) : popular wgpu-based game engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PistonDeveloperpiston&quot;&gt;Piston&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PistonDevelopers&quot;&gt;PistonDevelopers&lt;&#x2F;a&gt; : a modular game engine written in Rust&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FyroxEnginFyrox&quot;&gt;Fyrox&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FyroxEngine&quot;&gt;Fyrox Engine&lt;&#x2F;a&gt; : a modern Rust game engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethysamethyst&quot;&gt;Amethyst&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&quot;&gt;Amethyst Foundation&lt;&#x2F;a&gt; : a data-driven and data-oriented game engine aiming to be fast and as configurable as possible&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfusemerald&quot;&gt;emerald&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&quot;&gt;bombfuse&lt;&#x2F;a&gt; : 2D rust game engine focused on portability&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffetetra&quot;&gt;tetra&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&quot;&gt;Joe Clay&lt;&#x2F;a&gt; : simple 2D game engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&quot;&gt;Fedor Logachev&lt;&#x2F;a&gt; : minimal cross-platform game engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rusgodot-rust&quot;&gt;gdnative&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vurpo&quot;&gt;vurpo&lt;&#x2F;a&gt; ( &lt;em&gt;physics&lt;&#x2F;em&gt; ) : godot engine binding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;web-engine&quot;&gt;Web engine&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;engine&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&quot;&gt;Nazar√≠ Gonz√°lez&lt;&#x2F;a&gt; : portable multimedia layer ( web oriented )&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;human-interface-device&quot;&gt;Human interface device&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;hid&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;unrusgamepad-rs&quot;&gt;gamepad-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;edwin0cheng&quot;&gt;Edwin Cheng&lt;&#x2F;a&gt; : cross-platform gamepad support&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;shader-middleware&quot;&gt;Shader Middleware&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;middleware&lt;&#x2F;em&gt; ) ( &lt;em&gt;shader&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;glsl&quot;&gt;glsl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;Dimitri Sabadie&lt;&#x2F;a&gt; : OpenGL shading language parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rnaga&quot;&gt;naga&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; : shader translation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;geometry&quot;&gt;Geometry&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;geometry&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;tri-mesh&quot;&gt;tri-mesh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&quot;&gt;Asger Nyman Christiansen&lt;&#x2F;a&gt; : a triangle mesh data structure&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&#x2F;meshopt-rs&quot;&gt;meshopt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&quot;&gt;Graham Wihlidal&lt;&#x2F;a&gt; : binding of zeux&#x2F;meshoptimizer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;euclid&quot;&gt;euclid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&quot;&gt;Servo&lt;&#x2F;a&gt; : Geometry primitives&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;douglau&#x2F;pointy&quot;&gt;Pointy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;douglau&quot;&gt;Douglas Lau&lt;&#x2F;a&gt; : Minimal 2D geometry library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vectoriougeom-rs&quot;&gt;geom-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vectorious&quot;&gt;Brandon King&lt;&#x2F;a&gt; : Simple 2D geometry library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hmeyer&#x2F;implicit3d&quot;&gt;implicit3d&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hmeyer&quot;&gt;Henning Meyer&lt;&#x2F;a&gt; : 3d implicit geometry&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alteoueuler&quot;&gt;euler&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alteous&quot;&gt;David Harvey-Macaulay&lt;&#x2F;a&gt; : Mathematics library for 3D computer graphics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;lyon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&quot;&gt;Nicolas Silva&lt;&#x2F;a&gt; : A path tessellation library written in rust for GPU-based 2D graphics rendering.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&#x2F;raqote&quot;&gt;raqote&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&quot;&gt;Jeff Muizelaar&lt;&#x2F;a&gt; : A pure Rust 2D Graphics Library.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;douglau&#x2F;footile&quot;&gt;footile&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;douglau&quot;&gt;Douglas Lau&lt;&#x2F;a&gt; : A 2D vector graphics library&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;window-management&quot;&gt;Window management&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;windowing&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&quot;&gt;rust-windowing&lt;&#x2F;a&gt; : Cross-platform window creation and management&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;network&quot;&gt;Network&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;network&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&#x2F;crystalorb&quot;&gt;crystalorb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&quot;&gt;Ernest Wong&lt;&#x2F;a&gt; : networking library&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bevy&quot;&gt;Bevy&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;bevy&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyenginbevy&quot;&gt;bevy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cart&quot;&gt;Carter Anderson&lt;&#x2F;a&gt; ( &lt;em&gt;engine&lt;&#x2F;em&gt; ) : popular wgpu-based game engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyribevy_mod_picking&quot;&gt;bevy_mod_picking&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&quot;&gt;Aevyrie&lt;&#x2F;a&gt; : 3D mouse picking&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&#x2F;bevy_ecs_tilemap&quot;&gt;bevy_ecs_tilemap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&quot;&gt;John Mitchell&lt;&#x2F;a&gt; : ECS tilemap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&#x2F;kayak_ui&quot;&gt;kayak_ui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&quot;&gt;John Mitchell&lt;&#x2F;a&gt; : game UI&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&#x2F;bevy_tiled&quot;&gt;bevy_tiled&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&quot;&gt;John Mitchell&lt;&#x2F;a&gt; : rendering tiled maps&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;inodentry&#x2F;bevy_asset_ron&quot;&gt;bevy__ron&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;inodentry&quot;&gt;Ida Iyes&lt;&#x2F;a&gt; : RON Assets&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;smooth-bevy-cameras&quot;&gt;smooth-bevy-cameras&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;Duncan&lt;&#x2F;a&gt; : camera controllers with buttery, exponential smoothing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;webgpu&quot;&gt;WebGPU&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;webgpu&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;wgpu_glyph&quot;&gt;wgpu_glyph&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&quot;&gt;H√©ctor Ram√≥n&lt;&#x2F;a&gt; ( &lt;em&gt;webgpu&lt;&#x2F;em&gt; ) : text renderer for wgpu&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rwgpu&quot;&gt;WebGPU&lt;&#x2F;a&gt; : State of the art API for rendering&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gregtatum&#x2F;rugl&quot;&gt;rugl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gregtatum&quot;&gt;Greg Tatum&lt;&#x2F;a&gt; : declarative Stateless OpenGL in Rust (inspired by regl)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glyphon&quot;&gt;glyphon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&quot;&gt;Josh Groves&lt;&#x2F;a&gt; : 2D text renderer for wgpu&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-structures-and-algorithms&quot;&gt;Data Structures and Algorithms&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structures&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&quot;&gt;building-blocks&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;Duncan&lt;&#x2F;a&gt; : data structures for graphics&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;font&quot;&gt;Font&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;font&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&#x2F;swash&quot;&gt;swash&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&quot;&gt;Chad Brokaw&lt;&#x2F;a&gt; : font introspection&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&#x2F;zeno&quot;&gt;zeno&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&quot;&gt;Chad Brokaw&lt;&#x2F;a&gt; ( &lt;em&gt;line&lt;&#x2F;em&gt; ) : path rasterization library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;ttf-parser&quot;&gt;ttf-parser&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&quot;&gt;Yevhenii Reizner&lt;&#x2F;a&gt; : TrueType font parser&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexheretic&#x2F;glyph-brush&quot;&gt;glyph-brush&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexheretic&#x2F;glyph-brush&quot;&gt;Alex Butler&lt;&#x2F;a&gt; : fast GPU cached text rendering&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;wgpu_glyph&quot;&gt;wgpu_glyph&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&quot;&gt;H√©ctor Ram√≥n&lt;&#x2F;a&gt; ( &lt;em&gt;webgpu&lt;&#x2F;em&gt; ) : text renderer for wgpu&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;fontdb&quot;&gt;fontdb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&quot;&gt;Yevhenii Reizner&lt;&#x2F;a&gt; : font in-memory DB&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;svg&quot;&gt;SVG&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;svg&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;resvg&quot;&gt;resvg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&quot;&gt;Yevhenii Reizner&lt;&#x2F;a&gt; : SVG rendering&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&#x2F;railroad&quot;&gt;railroad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : produce syntax diagrams as SVG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&#x2F;railroad_dsl&quot;&gt;railroad_dsl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;Lukas Lueg&lt;&#x2F;a&gt; : a language to produce syntax diagrams as SVG&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gif&quot;&gt;GIF&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;gif&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crategifski&quot;&gt;gifski&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ImageOptim&quot;&gt;ImageOptim&lt;&#x2F;a&gt; : highest-quality GIF encoder based on pngquant.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crategif&quot;&gt;gif&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&quot;&gt;image-rs&lt;&#x2F;a&gt; : GIF en- and decoder written in Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratewebp-animation&quot;&gt;webp-animation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blaind&quot;&gt;Mika&lt;&#x2F;a&gt; : a high-level Rust wrapper for decoding and encoding WebP animations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;animation&quot;&gt;Animation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;animation&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;craterust-animation&quot;&gt;rust-animation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joone&quot;&gt;Joone Hur&lt;&#x2F;a&gt; : designed to implement a simple animated UI for embedded devices.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateanim&quot;&gt;anim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Joylei&quot;&gt;joylei&lt;&#x2F;a&gt; : a framework independent animation library for rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratesilver_animation&quot;&gt;silver_animation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lenscas&quot;&gt;lenscas&lt;&#x2F;a&gt; : simple and basic animation system for quicksilver.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateskeletal_animation&quot;&gt;skeletal_animation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bvssvni&quot;&gt;Sven Nilsen&lt;&#x2F;a&gt; : a Rust library for data-driven skeletal animation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;3d-s&quot;&gt;3D s&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;s_3d&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jkvargarussimp&quot;&gt;russimp&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jkvargas&quot;&gt;Jhonny Vargas&lt;&#x2F;a&gt; : binding of assimp&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;burtonageo&#x2F;bvh_anim&quot;&gt;bvh_anim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;burtonageo&quot;&gt;George Burton&lt;&#x2F;a&gt; : loader for bvh animation files&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- GLTF --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crategltf&quot;&gt;gltf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gltf-rs&quot;&gt;gltf-rs&lt;&#x2F;a&gt; : loader for glTF 2.0.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratemugltf&quot;&gt;mugltf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andykswong&quot;&gt;Andy K. S. Wong&lt;&#x2F;a&gt; : minimal glTF 2.0  model loader.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateeasy-gltf&quot;&gt;easy-gltf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flomonster&quot;&gt;Florian Amsallem&lt;&#x2F;a&gt; : loader for glTF 2.0.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- DAE --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratedae-parser&quot;&gt;dae-parser&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;digama0&quot;&gt;Mario Carneiro&lt;&#x2F;a&gt; : parser for the Collada (.dae) format.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratecollada&quot;&gt;collada&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PistonDevelopers&quot;&gt;PistonDevelopers&lt;&#x2F;a&gt; : parsing Collada files.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- OBJ --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateobj&quot;&gt;obj&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; : basic Wavefront OBJ importer and exporter.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateobj-rs&quot;&gt;obj-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simnalamburt&quot;&gt;Hyeon Kim&lt;&#x2F;a&gt; : Wavefront .obj parser, handles both .obj and .mtl formats.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratetobj&quot;&gt;tobj&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twinklebear&quot;&gt;Will Usher&lt;&#x2F;a&gt; : simple and lightweight option for loading OBJ files.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- STL --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratestl&quot;&gt;stl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eholk&quot;&gt;Eric Holk&lt;&#x2F;a&gt; : library for reading Stereo Lithography (STL) files.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratestl_io&quot;&gt;stl_io&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hmeyer&quot;&gt;Henning Meyer&lt;&#x2F;a&gt; : reading and writing STL (STereoLithography) files.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratenom_stl&quot;&gt;nom_stl&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ckampfe&quot;&gt;Clark Kampfe&lt;&#x2F;a&gt; : binary and ASCII STL parser.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- STEP --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateiso-10303-parts&quot;&gt;iso-10303-parts&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;J-F-Liu&quot;&gt;Junfeng Liu&lt;&#x2F;a&gt; : generated reader code for ISO 10303 parts.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateiso-10303&quot;&gt;iso-10303&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;J-F-Liu&quot;&gt;Junfeng Liu&lt;&#x2F;a&gt; : reading STP&#x2F;STEP CAD files.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- 3DS --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratefs3ds&quot;&gt;fs3ds&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;marius851000&quot;&gt;marius851000&lt;&#x2F;a&gt; : access the romfs of an unencrypted romfs.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratebevy_3ds&quot;&gt;bevy_3ds&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ian-h-chamberlain&quot;&gt;Ian Chamberlain&lt;&#x2F;a&gt; : using Bevy on the 3DS.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;line&quot;&gt;Line&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;line&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;expenseline_drawing&quot;&gt;line_drawing&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;expenses&quot;&gt;Ashley&lt;&#x2F;a&gt; : line-drawing algorithms&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&#x2F;swash&quot;&gt;zeno&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfrg&quot;&gt;Chad Brokaw&lt;&#x2F;a&gt; ( &lt;em&gt;font&lt;&#x2F;em&gt; ) : path rasterization library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;atthecodefacbezier-nd-rs&quot;&gt;bezier-nd&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;atthecodeface&quot;&gt;Gavin J Stark&lt;&#x2F;a&gt; : Bezier curve implementations using N-dimensional vectors&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grasbock&#x2F;makima_spline&quot;&gt;makima_spline&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grasbock&quot;&gt;GRASBOCK&lt;&#x2F;a&gt; : An implementation of the modified akima spline interpolation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;uniform-cubic-splines&quot;&gt;Uniform Cubic Spline Interpolation &amp;amp; Inversion&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&quot;&gt;Moritz M≈ìller&lt;&#x2F;a&gt; : Simple uniform cubic spline evaluation and inversion&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;plotting&quot;&gt;Plotting&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;plotting&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;milliamplotlib&quot;&gt;&lt;code&gt;plotlib&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;milliams&quot;&gt;Matt Williams&lt;&#x2F;a&gt; : generic data visualisation and plotting library for Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;igiagkioziplotly&quot;&gt;&lt;code&gt;plotly&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;igiagkiozis&quot;&gt;Ioannis Giagkiozis&lt;&#x2F;a&gt; a plotting library for Rust powered by Plotly.js.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tesselation&quot;&gt;Tesselation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;tesselation&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cds-astro&#x2F;cds-healpix-rust&quot;&gt;cdshealpix-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cds-astro&quot;&gt;CDS (Centre de Donn√©es astronomiques de Strasbourg)&lt;&#x2F;a&gt; : Rust implementation of the HEALPix tesselation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&#x2F;treHEAD&#x2F;crates&#x2F;path&quot;&gt;lyon::path&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&quot;&gt;Nicolas Silva&lt;&#x2F;a&gt; : Types and utilities to store, build and iterate over 2D paths&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dcrasch&#x2F;tir&#x2F;treHEAD&#x2F;tessellations&quot;&gt;tir&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dcrasch&quot;&gt;David Rasch&lt;&#x2F;a&gt; : Library to create and draw periodic tilings of the plane&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;suyash&#x2F;geopattern-rs&quot;&gt;geopattern&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;suyash&quot;&gt;Suyash&lt;&#x2F;a&gt; : Beautiful generative geometric background images from a string, a Rust implementation of geo_pattern from @jasonlong&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hmeyer&#x2F;tessellation&quot;&gt;tessellation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hmeyer&quot;&gt;Henning Meyer&lt;&#x2F;a&gt; : 3d tessellation library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;plane-split&quot;&gt;plane-split&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&quot;&gt;Servo&lt;&#x2F;a&gt; : Plane splitting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;color&quot;&gt;Color&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;color&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&#x2F;rust-rgb&quot;&gt;rgb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;Kornel&lt;&#x2F;a&gt; : RGB &#x2F; RGBA&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ogeon&#x2F;palette&quot;&gt;palette&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ogeon&quot;&gt;Erik Hedvall&lt;&#x2F;a&gt; : color conversion&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;simulation&quot;&gt;Simulation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;simulation&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rgfx-ocean&quot;&gt;gfx-ocean&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msiglreith&quot;&gt;Markus Siglreithmaier&lt;&#x2F;a&gt; : ocean simulation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sdk-bindings&quot;&gt;SDK bindings&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sdk&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noximsteamworks-rs&quot;&gt;steamworks&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noxime&quot;&gt;Aaro Per√§maa&lt;&#x2F;a&gt; : bindings to the SteamWorks SDK&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;codecs-and-video-processing&quot;&gt;Codecs and video processing&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;codec&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateac-ffmpeg&quot;&gt;ac-ffmpeg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;angelcam&quot;&gt;Angelcam&lt;&#x2F;a&gt; : rust wrapper for FFmpeg libraries.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crateffmpeg-next&quot;&gt;ffmpeg-next&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zmwangx&quot;&gt;Zhiming Wang&lt;&#x2F;a&gt; : safe FFmpeg wrapper (FFmpeg 4 compatible fork of the ffmpeg crate).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratesyeve&quot;&gt;syeve&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;framagit.org&#x2F;ZettaScript&quot;&gt;ZettaScript&lt;&#x2F;a&gt; : simple yet efficient video encoding (lossless streaming codec).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sound&quot;&gt;Sound&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pdeljanov&#x2F;Symphonia&quot;&gt;symphonia&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pdeljanov&quot;&gt;Philip Deljanov&lt;&#x2F;a&gt; : audio decoding&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RustAudio&#x2F;audrey&quot;&gt;audrey&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mitchmindtree&quot;&gt;mitchmindtree&lt;&#x2F;a&gt; : aggregator of audio format readers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sound-and-music-generation&quot;&gt;Sound and Music generation&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound_gen&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tversteeg&#x2F;usfx&quot;&gt;usfx&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tversteeg&quot;&gt;Thomas Versteeg&lt;&#x2F;a&gt; : generate sound effects&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chaospringlicol&quot;&gt;glicol&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chaosprint&quot;&gt;&lt;&#x2F;a&gt; : live coding language to generate music&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;glicol.org&#x2F;&quot;&gt;service glicol&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chaosprint&quot;&gt;&lt;&#x2F;a&gt; : live coding language to generate music as a service&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;virtual-studio-technology&quot;&gt;Virtual Studio Technology&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; ) ( &lt;em&gt;vst&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-vst2&quot;&gt;vst2&lt;&#x2F;a&gt; by [https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato](Marko Mijalkovic) : VST 2.4 API implementation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boscop&#x2F;easyvst&quot;&gt;easyvst&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boscop&quot;&gt;Boscop&lt;&#x2F;a&gt; : helper crate for creating VST audio plugins&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sound-shaders&quot;&gt;Sound Shaders&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; ) ( &lt;em&gt;shader&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeStahL&#x2F;BoiTracker&quot;&gt;BoiTracker&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeStahL&quot;&gt;Alexander Kraus&lt;&#x2F;a&gt; ( &lt;em&gt;midi&lt;&#x2F;em&gt; ) : visualization of MIDI input&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;midi&quot;&gt;MIDI&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; ) ( &lt;em&gt;midi&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeStahL&#x2F;BoiTracker&quot;&gt;BoiTracker&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LeStahL&quot;&gt;Alexander Kraus&lt;&#x2F;a&gt; ( &lt;em&gt;shader&lt;&#x2F;em&gt; ) : visualization of MIDI input&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boddlnagg&#x2F;midir&quot;&gt;midir&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boddlnagg&#x2F;&quot;&gt;Patrick Reisert&lt;&#x2F;a&gt; : cross-platform realtime MIDI processing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gis&quot;&gt;GIS&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;gis&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;b-r-u&#x2F;osmpbf&quot;&gt;osmpbf&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;b-r-u&quot;&gt;Johannes Hofmann&lt;&#x2F;a&gt; : reading the OpenStreetMap PBF file format&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;game-design-and-practice&quot;&gt;Game Design and Practice&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;game_design&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&#x2F;grue-rs&quot;&gt;grue&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&quot;&gt;Graham Wihlidal&lt;&#x2F;a&gt; : tools for building role-playing and adventure games&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethysbracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt; : terminal-based game development&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebrackeHandsOnRust&quot;&gt;HandsOnRust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt; : samples from Hands-on Rust book&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;games&quot;&gt;Games&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;game&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;veloren&#x2F;veloren&quot;&gt;veolren&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&quot;&gt;Joshua Barretto&lt;&#x2F;a&gt; : open world, open source voxel RPG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&#x2F;chirperjax&quot;&gt;chirperjax&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&quot;&gt;Matthew Michelotti&lt;&#x2F;a&gt; : simple 2D platformer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;sandbox&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&quot;&gt;JMS55&lt;&#x2F;a&gt; : a sand simulation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;toy-games&quot;&gt;Toy Games&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;game&lt;&#x2F;em&gt; ) ( &lt;em&gt;toy&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;bevy_rider&quot;&gt;bevy_rider&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;Duncan&lt;&#x2F;a&gt; : drawing with 2d physics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;roguelike&quot;&gt;roguelike&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&quot;&gt;JMS55&lt;&#x2F;a&gt; : turn based dungeon exploration&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulgb&#x2F;crossword-composer&quot;&gt;crossword&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulgb&quot;&gt;Paul Butler&lt;&#x2F;a&gt; : crossword composer.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&#x2F;name-needed&quot;&gt;name-needed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&quot;&gt;Dom Williams&lt;&#x2F;a&gt; : Dwarf Fortress-like game&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;specific&quot;&gt;Specific&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;specific&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rconan&#x2F;triangle-rs&quot;&gt;triangle-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rconan&quot;&gt;Rod Conan&lt;&#x2F;a&gt; : A Rust binder for the 2D mesh generator and Delaunay triangulator Triangle&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hbertoduarthilbert_2d&quot;&gt;Hilbert 2D&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hbertoduarte&quot;&gt;Humberto Duarte&lt;&#x2F;a&gt; : Functions for mapping between 1D and 2D space using the Hilbert curve, and its approximations&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ricosjp&#x2F;truck&#x2F;treHEAD&#x2F;truck-geometry&quot;&gt;truck-geometry&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ricosjp&quot;&gt;RICOS Co. Ltd.&lt;&#x2F;a&gt; : geometrical structs: knot vector, B-spline and NURBS&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eadf&#x2F;centerline.rs&quot;&gt;centerline.rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eadf&quot;&gt;eadf&lt;&#x2F;a&gt; : Simple library for finding centerlines of 2D closed geometry&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Toru3&#x2F;ring-algorithm&quot;&gt;ring-algorithm&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Toru3&quot;&gt;Toru3&lt;&#x2F;a&gt; : algorithms on ring (Abstruct Algebra)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nicolasklenerenterpolation&quot;&gt;Enterpolation&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nicolasklenert&quot;&gt;NicolasKlenert&lt;&#x2F;a&gt; : A library for creating and computing interpolations, extrapolations and smoothing of generic data points&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codeberg.org&#x2F;librediron-shapes&quot;&gt;libreda-shapes&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;codeberg.org&#x2F;libreda&quot;&gt;LibrEDA&lt;&#x2F;a&gt; : Basic data types and routines for computational geometry focused on VLSI chip design&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;utilities&quot;&gt;Utilities&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;utility&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&#x2F;landon&quot;&gt;landon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&quot;&gt;Chinedu Francis Nwafili&lt;&#x2F;a&gt; : exporting Blender data&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;rendering-comparison&quot;&gt;Rendering comparison&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;Name&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;WebGL 2 support&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Size( wasm + js)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;glow&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;55 Kb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;three-d&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;139 Kb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasytpixels&quot;&gt;pixels&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;WIP&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;1 Mb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;cratelimelight&quot;&gt;limelight&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;175 Kb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuantumBadger&#x2F;Speedy2D&quot;&gt;speedy2d&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;1 Mb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;77 Kb&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&#x2F;gl-rs&quot;&gt;gl-rs&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;unsorted&#x2F;renderer&#x2F;gl-rs&#x2F;Readme.md&quot;&gt;Problem&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;( &lt;em&gt;renderer&lt;&#x2F;em&gt; ) - renderers&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;middleware&lt;&#x2F;em&gt; ) - software of middle layer to leverage low-level functionality&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;engine&lt;&#x2F;em&gt; ) - game and web engines&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;hid&lt;&#x2F;em&gt; ) - human interface device&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;shader&lt;&#x2F;em&gt; ) - shader related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;geometry&lt;&#x2F;em&gt; ) - geometry &#x2F; mesh generation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;windowing&lt;&#x2F;em&gt; ) - window creation and management&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;network&lt;&#x2F;em&gt; ) - network programming&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;bevy&lt;&#x2F;em&gt; ) - Bevy related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;webgpu&lt;&#x2F;em&gt; ) - WebGPU related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;data_structures&lt;&#x2F;em&gt; ) - data structures and algorithms for graphics, multimedia and game development&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;plotting&lt;&#x2F;em&gt; ) - plot data&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) - data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;tesselation&lt;&#x2F;em&gt; ) - tesselation libs&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;color&lt;&#x2F;em&gt; ) - color related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;physics&lt;&#x2F;em&gt; ) - physics&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;simulation&lt;&#x2F;em&gt; ) - simulation&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;line&lt;&#x2F;em&gt; ) - line related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;font&lt;&#x2F;em&gt; ) - fonts related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;svg&lt;&#x2F;em&gt; ) - SVG related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;gif&lt;&#x2F;em&gt; ) - GIF related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;animation&lt;&#x2F;em&gt; ) - animating of drawing primitives&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;img&lt;&#x2F;em&gt; ) - image processing related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;s_3d&lt;&#x2F;em&gt; ) - 3D assets loading&#x2F;saving&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;codec&lt;&#x2F;em&gt; ) - codecs and video processing&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; ) - sound-related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;vst&lt;&#x2F;em&gt; ) - virtual studio technology&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;midi&lt;&#x2F;em&gt; ) - MIDI related&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;gis&lt;&#x2F;em&gt; ) - geographic information system&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;game_design&lt;&#x2F;em&gt; ) - game design tools&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;game&lt;&#x2F;em&gt; ) - finished game&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;toy&lt;&#x2F;em&gt; ) - toy game&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;specific&lt;&#x2F;em&gt; ) - some specific graphics libraries&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;utility&lt;&#x2F;em&gt; ) - utilities&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- qqq : improve tags descriptions --&gt;
</description>
        </item>
        <item>
            <title>*</title>
            <pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://example.com/blog/posts/toolbox-scientific/</link>
            <guid>https://example.com/blog/posts/toolbox-scientific/</guid>
            <description>&lt;h1 id=&quot;infinity-scientific-toolbox&quot;&gt;:infinity: Scientific Toolbox&lt;&#x2F;h1&gt;
&lt;p&gt;Awesome collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP. It is curated by us.&lt;&#x2F;p&gt;
&lt;p&gt;You might also be interested in other tooboxes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;:wrench: &lt;a href=&quot;toolbox_general.md&quot;&gt;Explore&lt;&#x2F;a&gt; : general-purpose toolbox with collection of crates.&lt;&#x2F;li&gt;
&lt;li&gt;:video_game: &lt;a href=&quot;toolbox_multimedia.md&quot;&gt;Explore&lt;&#x2F;a&gt; : multimedia toolbox with collection of crates for GameDev, Graphics, Video, Audio.&lt;&#x2F;li&gt;
&lt;li&gt;:infinity: &lt;a href=&quot;toolbox_scientific.md&quot;&gt;Explore&lt;&#x2F;a&gt; : scientific toolbox with collection of crates for Math, Physycs, Lienar Algebra, Machine Learnign, DSP.&lt;&#x2F;li&gt;
&lt;li&gt;:package: &lt;a href=&quot;toolbox_distros.md&quot;&gt;Explore&lt;&#x2F;a&gt; : distros toolbox with collection of utilities written in Rust to been distributed outside of Rust ecosystem.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;posts&#x2F;toolbox-scientific&#x2F;#tags-legend&quot;&gt;:arrow_down: Tags legend&lt;&#x2F;a&gt; at the end of the page.&lt;&#x2F;p&gt;
&lt;!-- - []() by []() : --&gt;
&lt;h2 id=&quot;general-purpose-math&quot;&gt;General-purpose math&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;math&lt;&#x2F;em&gt; ) ( &lt;em&gt;general&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&quot;&gt;Gray Olson&lt;&#x2F;a&gt; : linear algebra crate for games and graphics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforgnalgebra&quot;&gt;nalgebra&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&quot;&gt;dimforge&lt;&#x2F;a&gt; : game linear algebra&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustgd&#x2F;cgmath&quot;&gt;cgmath&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustgd&quot;&gt;rustgd&lt;&#x2F;a&gt; : A linear algebra and mathematics library for computer graphics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rcrates&#x2F;gml&quot;&gt;gml&lt;&#x2F;a&gt; : Graphics Math Library. Generic Vector and Matrix Math library targetting graphics applications.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;samibendou&#x2F;geomath&quot;&gt;geomath&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;samibendou&quot;&gt;bendou&lt;&#x2F;a&gt; : stack-allocated maths for geometry, simulation and computer graphics&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;unsorted-math&quot;&gt;Unsorted math&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;math&lt;&#x2F;em&gt; ) ( &lt;em&gt;unsorted&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;packed_simd&quot;&gt;packed_simd_2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gnzlbg&quot;&gt;gnzlbg&lt;&#x2F;a&gt; : Packed SIMD Vectors&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Logicalshifflo_curves&quot;&gt;flo_curves&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Logicalshift&quot;&gt;Andrew Hunter&lt;&#x2F;a&gt; ( &lt;em&gt;line&lt;&#x2F;em&gt; ) : bezier curve&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusmatrixmultiply&quot;&gt;matrixmultiply&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : matrix multiplication&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blusndarray&quot;&gt;ndarray&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : N-dimensional array&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforgsimba&quot;&gt;simba&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&quot;&gt;dimforge&lt;&#x2F;a&gt; : SIMD algebra for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;nalgebra&quot;&gt;nalgebra&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&#x2F;approx&quot;&gt;approx&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&quot;&gt;Brendan Zabarauskas&lt;&#x2F;a&gt; : approximate floating point comparisons&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&#x2F;noisy_float-rs&quot;&gt;noisy_float&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&quot;&gt;Matthew Michelotti&lt;&#x2F;a&gt; : floating point types that panic if they are set to an illegal value, such as NaN&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&#x2F;half-rs&quot;&gt;half&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starkat99&quot;&gt;Kathryn Long&lt;&#x2F;a&gt; : half-precision floating point types f16 and bf16 for&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;mint&quot;&gt;mint&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;Dzmitry Malyshau&lt;&#x2F;a&gt; : math interoperability types&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brainiumllc&#x2F;gee&quot;&gt;gee&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brainiumllc&quot;&gt;Brainium&lt;&#x2F;a&gt; : A convenience-first geometry library tailor-made for 2D games!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;popog&#x2F;beagle-rs&quot;&gt;beagle-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;popog&quot;&gt;Popog&lt;&#x2F;a&gt; : A basic linear algebra library for computer graphics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rob2309&#x2F;gfx-maths-rs&quot;&gt;GFX Maths&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rob2309&quot;&gt;Robin Quint&lt;&#x2F;a&gt; : Implementations for the most essential Graphics Math operations&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;swiftcoder&#x2F;mini-math-rs&quot;&gt;mini-math-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;swiftcoder&quot;&gt;Tristam MacDonald&lt;&#x2F;a&gt; : Lightweight math routines for 3D graphics ( &lt;em&gt;3d&lt;&#x2F;em&gt; )&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lichtso&#x2F;geometric_algebra&quot;&gt;geometric_algebra&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lichtso&quot;&gt;Alexander Mei√üner&lt;&#x2F;a&gt; : Generate(d) custom libraries for geometric algebras&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bradmartin333&#x2F;rustometry&quot;&gt;rustometry&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bradmartin333&quot;&gt;Brad Martin&lt;&#x2F;a&gt;: Spatial Geometry in Pure Rust&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;scanmountgoageometry_tools&quot;&gt;geometry_tools&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;scanmountgoat&quot;&gt;ScanMountGoat&lt;&#x2F;a&gt; : Efficient computation of single precision geometric data&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;myelin-ai&#x2F;geometry&quot;&gt;Myelin Geometry&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;myelin-ai&quot;&gt;Myelin Research Group&lt;&#x2F;a&gt; : Basic linear and vector geometry for two-dimensional Euclidean geometry&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;graphs&quot;&gt;Graphs&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) ( &lt;em&gt;graphs&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petgraph&#x2F;petgraph&quot;&gt;petgraph&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; : graph data structure and algorithms&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meta-math&quot;&gt;Meta math&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;math&lt;&#x2F;em&gt; ) ( &lt;em&gt;meta&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;num-traits&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;rust-num&#x2F;num-traits&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aturon&quot;&gt;Aaron Turon&lt;&#x2F;a&gt; : traits for number&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;physics&quot;&gt;Physics&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;physics&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforgparry&quot;&gt;parry&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&quot;&gt;dimforge&lt;&#x2F;a&gt; : collision-detection library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforgnphysics&quot;&gt;nphysics&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&quot;&gt;S√©bastien Crozet&lt;&#x2F;a&gt; : 2 and 3-dimensional rigid body physics engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;openrr&#x2F;k&quot;&gt;k&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OTL&quot;&gt;Takashi Ogura&lt;&#x2F;a&gt; : kinematics library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforgrapier&quot;&gt;rapier2d&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&quot;&gt;S√©bastien Crozet&lt;&#x2F;a&gt; : 2D physics engines focused on performance&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawursgodot-vs-rapier&quot;&gt;godot-vs-rapier&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawurst&quot;&gt;Stephan Dilly&lt;&#x2F;a&gt; : comparison of two physics engines&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rusgodot-rust&quot;&gt;gdnative&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vurpo&quot;&gt;vurpo&lt;&#x2F;a&gt; ( &lt;em&gt;engine&lt;&#x2F;em&gt; ) : godot engine binding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dsp&quot;&gt;DSP&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;sound&lt;&#x2F;em&gt; ) ( &lt;em&gt;dsp&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phip1611&#x2F;spectrum-analyzer&quot;&gt;spectrum-analyzer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phip1611&quot;&gt;Philipp Schuster&lt;&#x2F;a&gt; : spectrum analysis&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phip1611&#x2F;beat-detector&quot;&gt;beat-detector&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phip1611&quot;&gt;Philipp Schuster&lt;&#x2F;a&gt; : beat detection&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ejmahler&#x2F;RustFFT&quot;&gt;rustfft&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ejmahler&quot;&gt;Elliott Mahler&lt;&#x2F;a&gt; : FFT&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&#x2F;fourier&quot;&gt;fourier&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;calebzulawski&quot;&gt;Caleb Zulawski&lt;&#x2F;a&gt; : FFT&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- ## GDPR and data safety

( _safety_ )

- [oca-rust](https:&#x2F;&#x2F;github.com&#x2F;THCLab&#x2F;oca-rust) by [The Human Colossus Lab](https:&#x2F;&#x2F;github.com&#x2F;THCLab) : Rust implementation of Overlays Capture architecture.
- [gdpr_consent](https:&#x2F;&#x2F;github.com&#x2F;cirlgdpr_consent) by [Tim Cheeseman](https:&#x2F;&#x2F;github.com&#x2F;cirla) : GDPR Transparency and Consent Framework SDK Rust.
- [gdpr_consent_string](https:&#x2F;&#x2F;github.com&#x2F;mdsherry&#x2F;gdpr_consent_string) by [mdsherry](https:&#x2F;&#x2F;github.com&#x2F;mdsherry) : mask GDPR strings.
- [gdpr-extractor](https:&#x2F;&#x2F;github.com&#x2F;oshagdpr-extractor) by [oshas](https:&#x2F;&#x2F;github.com&#x2F;oshas) : extract GDPR data.
- [safelog](https:&#x2F;&#x2F;gitlab.torproject.org&#x2F;tpo&#x2F;corarti&#x2F;-&#x2F;tree&#x2F;main&#x2F;crates&#x2F;safelog) by [The Tor Project](https:&#x2F;&#x2F;gitlab.torproject.org&#x2F;tpo) : mark data as sensitive for logging purposes.
- [secrecy](https:&#x2F;&#x2F;github.com&#x2F;iqlusioninc&#x2F;cratetree&#x2F;main&#x2F;secrecy) by [iqlusion](https:&#x2F;&#x2F;github.com&#x2F;iqlusioninc) : a simple secret-keeping library for Rust.
- [secstr](https:&#x2F;&#x2F;github.com&#x2F;Riatechsecstr) by [Pavel Strakhov](https:&#x2F;&#x2F;github.com&#x2F;Riateche) : a Rust library that implements a data type (wrapper around Vec&lt;u8&gt;) suitable for storing sensitive information such as passwords and private keys in memory.
- [secret-value](https:&#x2F;&#x2F;crates.io&#x2F;cratesecret-value) by [Pavel Strakhov](https:&#x2F;&#x2F;github.com&#x2F;Riateche) : is a minimalistic crate for ensuring that no secret value was displayed or logged.
- [fakepii](https:&#x2F;&#x2F;github.com&#x2F;feynmanium&#x2F;fakepii) by [Jerry Wartak](https:&#x2F;&#x2F;github.com&#x2F;feynmanium) : a program for generating fake &quot;personally identifiable information&quot; (PII) for tests and examples.
- [ApacheLogAnonymizer](https:&#x2F;&#x2F;github.com&#x2F;br-olf&#x2F;ApacheLogAnonymizer) by [Olaf Pichler](https:&#x2F;&#x2F;github.com&#x2F;br-olf) : a small Rust programm to anonymize webserver logs.
- [noname](https:&#x2F;&#x2F;github.com&#x2F;antonKalinin&#x2F;noname) by [Anton Kalinin](https:&#x2F;&#x2F;github.com&#x2F;antonKalinin) : a CLI tool to help remove personally identifiable information from screenshots.
- [clean-pii](https:&#x2F;&#x2F;github.com&#x2F;grass-roots-ultimatclean-pii) by [Anton Kalinin](https:&#x2F;&#x2F;github.com&#x2F;antonKalinin) : A Rust executable to work with PII in Ultimate Central data exports. --&gt;
&lt;h2 id=&quot;hpc&quot;&gt;HPC&lt;&#x2F;h2&gt;
&lt;p&gt;( &lt;em&gt;hpc&lt;&#x2F;em&gt; )&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-GPU&#x2F;Rust-CUDA&quot;&gt;cuda_std&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RDambrosio016&quot;&gt;Riccardo D&#x27;Ambrosio&lt;&#x2F;a&gt; : CUDA&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;twistedfall&#x2F;opencv-rust&quot;&gt;opencv&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;twistedfall&quot;&gt;twistedfall&lt;&#x2F;a&gt; : bindings for OpenCV 3 &amp;amp; 4&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tags-legend&quot;&gt;Tags legend&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;( &lt;em&gt;general&lt;&#x2F;em&gt; ) - general-purpose&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;data_structure&lt;&#x2F;em&gt; ) - data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;graphs&lt;&#x2F;em&gt; ) - graphs data structures and algorithms&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;math&lt;&#x2F;em&gt; ) - math&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;meta&lt;&#x2F;em&gt; ) - meta&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;physics&lt;&#x2F;em&gt; ) - physics&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;dsp&lt;&#x2F;em&gt; ) - digital signals processing&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;safety&lt;&#x2F;em&gt; ) - GDPR and data safety&lt;&#x2F;li&gt;
&lt;li&gt;( &lt;em&gt;hpc&lt;&#x2F;em&gt; ) - high performance computing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!-- qqq : improve tags descriptions --&gt;
</description>
        </item>
    </channel>
</rss>
